{"version":3,"sources":["Componentes/Home/Cards.js","Componentes/Home/Lista.js","Componentes/Home/listaUCOItem.js","Componentes/Home/ListaUC.js","Componentes/Home/Home.js","Componentes/cliente/ListaItem.js","Componentes/cliente/Proveedore.js","Componentes/cliente/Trab.js","Componentes/avatar.jpg","Componentes/cliente/ListaItemSmall.js","Componentes/cliente/ProveedoreSmall.js","Componentes/cliente/TrabSmall.js","Componentes/ventas/Pagination.js","Componentes/cliente/ListaCliente.js","Componentes/perfil/timeline.js","Componentes/perfil/Paginacion.js","Componentes/perfil/TimelineNew.js","Componentes/perfil/Perfil.js","Componentes/product.png","Componentes/productos/itemProductos.js","Componentes/productos/itemProductLT.js","Componentes/productos/ListaProd.js","Componentes/productos/Productos.js","Componentes/bajoInventario/itemProductosBI.js","Componentes/bajoInventario/itemProductLTBI.js","Componentes/bajoInventario/ListaProdBI.js","Componentes/bajoInventario/ProductosBI.js","Componentes/Construccion/Contruccion.js","Componentes/productos/ProdBase.js","Componentes/compra/compraItem.js","Componentes/compra/CompraItemSmall.js","Componentes/compra/comprasList.js","Componentes/compra/compra.js","Componentes/ventas/VentaItem.js","Componentes/ventas/VentaItemSmall.js","Componentes/ventas/VentaList.js","Componentes/ventas/Venta.js","Componentes/reporteVenta/ReporteItemVenta.js","Componentes/reporteVenta/ReporteVentaLista.js","Componentes/reporteVenta/VG.js","Componentes/reporteVenta/ReporteVenta.js","Componentes/Reportes/ReporteProductos.js","Componentes/Reportes/ReporteCompra.js","Componentes/Reportes/ReporteCliente.js","Componentes/Pages.js","Componentes/Login/Login.js","Componentes/SideBar.js","Componentes/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","elementos","invNeto","numeral","inv","format","stock","cantP","cantV","cantB","cantC","cantF","cantClient","clN","className","style","paddingLeft","paddingTop","fontSize","Divider","Modal","setAppElement","Lista","user","useState","item","setItem","modalIsOpen","setModalIsOpen","edit","setEdit","text","setText","useEffect","a","i","c","id","check","a√±ad","push","React","anchorEl","setAnchorEl","taskContent","useRef","openModal","forEach","element","onchange","indexOf","console","log","antCheck","texto","cheM","splice","handleMenuItemClick","event","index","current","children","backgroundColor","display","classes","makeStyles","theme","modal","alignItems","justifyContent","paper","position","width","marginLeft","border","marginTop","padding","maxHeight","overflow","useStyles","transform","textAlign","verticalAlign","Button","aria-controls","aria-haspopup","onClick","currentTarget","color","Menu","keepMounted","open","Boolean","onClose","MenuItem","ref","map","type","value","isOpen","shouldCloseOnEsc","shouldCloseOnOverlayClick","TextareaAutosize","rowsMin","aria-label","defaultValue","onChange","e","q","target","height","background","alignSelf","float","visibility","name","first","last","editarTarea","TransitionLeft","props","Slide","direction","ListaUCOItem","setOpen","handleClick","Snackbar","autoHideDuration","TransitionComponent","anchorOrigin","vertical","horizontal","Alert","severity","document","getElementById","fact","fecha","empre","total","ListaUC","compare","b","cantA","split","fechaA","fechaB","comparison","today","Date","now","mes","getMonth","elem","Math","round","random","empresa","String","fromCharCode","bol","tot","dia","getDate","getFullYear","valor","el","sort","Home","datos","setDatos","valores","valoresStatic","etiq","canvas","getHours","inicio","slice","bas","label","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","fill","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","pointHitRadiu7s","generadorDatos","createElement","options","scales","yAxes","ticks","beginAtZero","min","max","ListaItem","nombre","apellido","setid","ele","handleClickSB","mail","phone","dirr","fe","direccion","phono","for","disabled","Proveedores","avatar","trab","Trab","src","foto","alt","tipo","ListaItemSmall","ProveedoresSmall","TrabSmall","Pagination","postsPerPage","totalPosts","nextPage","paginate","prevPage","currentPage","pageNumbers","matches","useMediaQuery","ceil","length","ListaCliente","query","openB","setOpenB","openM","setOpenM","matches630","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","pageNumber","aniadidoArrow","setAniadidoArrow","nombreArrow","setNombreArrow","nameArrow","setNameArrow","empresaArrow","setEmpresaArrow","trabArrow","setTrabArrow","tipoArrow","setTipoArrow","axios","result","results","registered","date","array1","num","tipoUser","fech","fechita","usuarios","location","street","number","city","email","picture","large","fetchItems","handleClickB","handleCloseB","reason","handleClickM","handleCloseM","compareAnia","eleA","eleB","compareName","compareEmpresa","compareTipo","ania","reverse","prov","emp","nameTrab","borderRadius","placeholder","aria-labelledby","aria-describedby","Proveedore","TimelinePerfil","fechas","setFechas","setTexto","mesA","day","month","year","t","j","array2","handleClose","Timeline","align","TimelineItem","TimelineOppositeContent","Typography","variant","TimelineSeparator","TimelineDot","TimelineConnector","Paginacion","TimelineNew","checked1","setChecked1","checked2","setChecked2","aa","d","Grow","in","action","Perfil","web","dir","country","matches2","setElementos","setTrab","Load","setLoad","trabTipo","setTrabTipo","trabajo","tar","val","marginRight","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","x","y","rx","ry","role","aria-valuenow","aria-valuemin","aria-valuemax","login","username","cell","data-toggle","href","Tooltip","title","uuid","class","password","CircularProgress","ItemProducto","costo","price","cant","cod","cost","image","ItemProductoLT","ListaProd","items","setValor","invTotal","precioInv","codArrow","setCodArrow","costoArrow","setCostoArrow","precioArrow","setPrecioArrow","existArrow","setExistArrow","cantEle","floor","extra","ite","imgUrl","id2","title2","ite2","error","compareCod","compareCosto","compareCant","comparePrecio","precio","exist","alignContent","colSpan","fontWeight","Productos","res","concat","ProductosBI","Construccion","ProdBase","handleClick2","product","CompraItem","total1","setTotal1","total2","setTotal2","Neto","setNeto","IVA","setIVA","setT","numero","f","p","prod1Price","prod1Cant","prod2Price","prod2Cant","iba","readonly","prod1","prod2","CompraItemSmall","ComprasList","dias","elemento","boletaMes","nc","n","id1","cant1","cant2","key","Compra","VentaItem","VentaItemSmall","VentaList","rand","clientes","cliente","itemC","setItemC","listaElementos","idGroup","cli","pag","Venta","loading","setloading","setCliente","ItemVenta","ReporteVentaLista","overflowY","VG","setData","totalV","setTotalV","totalG","setTotalG","promVenta","setPromVenta","margen","setMargen","from","to","ventasDia","setVentasDia","ventasProd","setVentasProd","ventasCat","setVentasCat","gananciasCat","setgananciasCat","ventasCatGrap","setVentasCatGrap","gananciasCatGrap","setGananciasCatGrap","optionsDonat2","legend","cat","listaP","c3","datosVentas","datosGanancias","suma","sumaG","g","m","datitos","maxV","listaV","listaG","listaC","labelsVCat","dataVCat","labelsGCat","dataGCat","por","a1","b2","gh","d4","minHeight","maintainAspectRatio","responsive","fontStyle","marginBottom","ReporteVenta","Loading","selectedDayRange","setSelectedDayRange","range","setRange","setDesde","setHasta","mI","dayI","mon","mesIni","fechasT","da","dayH","inputPlaceholder","maximumDate","utils","getToday","inputClassName","ReporteProductos","ReporteCompra","ReporteCliente","Pages","seleccion","cantProv","cantT","Login","load","setMail","psw","setPsw","openE","setOpenE","required","SideBar","setSeleccion","setRandom","sideRef","proveedores","cantBoleta","totalVenta","cantFact","totalCompra","clienteN","count","setCount","text0","text1","text2","text3","msj","titulo","tit","cerrarSesion","onSelect","selected","Toggle","Nav","defaultSelected","eventKey","data-target","Badge","badgeContent","Avatar","medium","eliminar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6e9430b.chunk.js","sourcesContent":["import React from 'react';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport numeral from 'numeral';\r\n\r\nconst Cards = ({ elementos }) => {\r\n    const invNeto = numeral(elementos.inv).format(0, 0);\r\n    const stock = numeral(elementos.cantP).format(0, 0);\r\n    const cantV = numeral(elementos.cantV).format(0, 0);\r\n    const cantB = numeral(elementos.cantB).format(0, 0);\r\n    const cantC = numeral(elementos.cantC).format(0, 0);\r\n    const cantF = numeral(elementos.cantF).format(0, 0);\r\n    const cantClient = numeral(elementos.cantClient).format(0, 0);\r\n    const clN = numeral(elementos.clN).format(0, 0);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card bg-primary text-white mb-1 mt-5\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                            <LocalOfferIcon style={{ fontSize: \"1em\"}} />\r\n                        </div>\r\n                        <div className=\"col-md-10 \">\r\n                            Inventario neto: <br></br>\r\n                        ${invNeto}\r\n                            <Divider />\r\n                            Stock: {stock}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"card bg-success text-white mb-1\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\" }}>\r\n                            <MonetizationOnIcon style={{ fontSize: \"1em\" }} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            Total ventas hoy: <br></br>\r\n                        ${cantV}\r\n                            <Divider />\r\n                    Boletas hoy: {cantB}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"card bg-danger text-white mb-1\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\" }}>\r\n                            <ShoppingCartIcon style={{ fontSize: \"1em\" }} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            Total compras hoy: <br></br>\r\n                        ${cantC}\r\n                            <Divider />\r\n                    Compras hoy: {cantF}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"card bg-info text-white\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\" }}>\r\n                            <PeopleAltIcon style={{ fontSize: \"1em\" }} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            Clientes: <br></br>\r\n                            {cantClient}\r\n                            <Divider />\r\n                    Clientes nuevos: {clN}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst Lista = ({ user }) => {\r\n  const [item, setItem] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [edit, setEdit] = useState({});\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    let a = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let c = {\r\n        id: i,\r\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam est elit\",\r\n        check: false,\r\n        a√±ad: \"A√±adido por: RandomUser\"\r\n      }\r\n      a.push(c);\r\n    }\r\n    setItem(a);\r\n  }, []);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const taskContent = useRef();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const editarTarea = () => {\r\n    let c = item;\r\n    c.forEach(element => {\r\n      if (element.id == edit.id) {\r\n        let i = c.indexOf(element);\r\n        console.log(element);\r\n        if (i !== -1) {\r\n          let cheM = {\r\n            id: element.id,\r\n            text: text,\r\n            check: element.check,\r\n            a√±ad: \"Editado por \" + user.name.first + \" \" + user.name.last\r\n          };\r\n          c.splice(i, 1, cheM);\r\n          setItem(c);\r\n          console.log(c);\r\n          setModalIsOpen(false);\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const openModal = (id) => {\r\n    let c = item;\r\n    c.forEach(element => {\r\n      if (element.id == id) {\r\n        setEdit(element);\r\n        setText(element.text);\r\n        setModalIsOpen(true);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  onchange = (id) => {\r\n    let c = item;\r\n    c.forEach(element => {\r\n      if (element.id == id) {\r\n        let i = c.indexOf(element);\r\n        console.log(element);\r\n        let antCheck = !element.check;\r\n        let texto = element.text;\r\n        if (i !== -1) {\r\n          let cheM = {\r\n            id: id,\r\n            text: texto,\r\n            check: antCheck\r\n          };\r\n          c.splice(i, 1, cheM);\r\n          setItem(c);\r\n          console.log(c);\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    switch (index) {\r\n      case 0:\r\n        item.forEach(element => {\r\n          if (element.check) {\r\n            let i = element.id-1;\r\n            const taskNode = taskContent.current.children[i];\r\n            taskNode.style.backgroundColor='#17a2b8';\r\n          }\r\n        });\r\n        setAnchorEl(null);\r\n        break;\r\n      case 1:\r\n        item.forEach(element => {\r\n          if (element.check) {\r\n            let i = element.id-1;\r\n            const taskNode = taskContent.current.children[i];\r\n            taskNode.style.backgroundColor='#28a745';\r\n          }\r\n        });\r\n        setAnchorEl(null);\r\n        break;\r\n      case 2:\r\n        item.forEach(element => {\r\n          if (element.check) {\r\n            let i = element.id-1;\r\n            const taskNode = taskContent.current.children[i];\r\n            taskNode.style.display='none';\r\n          }\r\n        });\r\n        setAnchorEl(null);\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeText = (q) => {\r\n    setText(q);\r\n\r\n  }\r\n\r\n  const getModalStyle = () => {\r\n    const top = '15%';\r\n    const left = '15%'\r\n\r\n    return {\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: \"transparent\",\r\n      paddingTop: \"5%\"\r\n    },\r\n    paper: {\r\n      position: 'absolute',\r\n      width: '70%',\r\n      backgroundColor: 'rgb(39, 41, 61)',\r\n      marginLeft: '15%',\r\n      border: 'none',\r\n      marginTop: '5%',\r\n      padding: '0',\r\n      maxHeight:'100%',\r\n      overflow: 'scroll'    \r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-tasks card text-white cardHome\">\r\n        <div className=\"card-header\" style={{ padding: \"0\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <h6 className=\"d-inline\" style={{ textAlign: \"left\", verticalAlign: \"middle\" }}>TASKS(5)</h6>\r\n            </div>\r\n            <div className=\"col-md-3 ml-auto\">\r\n              <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon style={{ color: \"white\" }} /></Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n\r\n              >\r\n                <MenuItem onClick={(event) => handleMenuItemClick(event, 0)}>Marcar como iniciada</MenuItem>\r\n                <MenuItem onClick={(event) => handleMenuItemClick(event, 1)}>Marcar como completada</MenuItem>\r\n                <MenuItem onClick={(event) => handleMenuItemClick(event, 2)}>Eliminar</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <table className=\"table text-white\">\r\n            <tbody ref = {taskContent}>\r\n              {item.map(item => (\r\n                <tr key={item.id} id={item.id}>\r\n                  <td className=\"page__toggle\">\r\n                    <label className=\"toggle\">\r\n                      <input className=\"toggle__input\" type=\"checkbox\"\r\n                        value={item.check}\r\n                        onClick={() => onchange(item.id)}\r\n                      />\r\n                      <span className=\"toggle__label\">\r\n\r\n                      </span>\r\n                    </label>\r\n                  </td>\r\n                  <td className=\"mb-0 mt-0\" style={{ padding: \"0\", paddingLeft: \"5\", textAlign: \"left\" }}>\r\n                    <h4 className=\"mb-0\" >Task-{item.id}</h4>\r\n                    <p className=\"mb-0\" >{item.text}</p>\r\n                    <p className=\"mb-0\" >{item.a√±ad}</p></td>\r\n                  <td style={{ verticalAlign: \"middle\" }}><EditIcon style={{ color: \"white\", fontSize: \"2.28em\" }} onClick={() => openModal(item.id)} /></td>\r\n                </tr>\r\n              ))}\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnEsc={true}\r\n        shouldCloseOnOverlayClick={false}\r\n        className={classes.modal}\r\n      >\r\n        <div className={`${classes.paper} mt-3`}>\r\n          <header>\r\n            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n            <h2 className=\"h1T mt-3 ml-5\">Editar Tarea</h2>\r\n          </header>\r\n          <main>\r\n            <div className=\"col-md-8 mt-3 ml-3\">\r\n              <div className=\"row texto\">\r\n                <div className=\"col-md-12 mt-3\">\r\n                  <h4 className=\"mb-0\" >Task-{edit.id}</h4>\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 ml-3\">\r\n                  <p>Descripci√≥n: </p>\r\n                  <TextareaAutosize\r\n                    rowsMin={3}\r\n                    aria-label=\"maximum height\"\r\n                    defaultValue={text}\r\n                    onChange={(e) => onChangeText(e.target.value)}\r\n                    style = {{width:\"120%\", height:\"100px\", marginLeft:\"auto\", background: \"transparent\", color:\"white\", alignSelf:\"center\"}}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.paper} className=\"row mb-2\">\r\n              <div className=\"col-md-6 mt-3\">\r\n                <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n              </div>\r\n              <div className=\"col-md-6 mt-3\">\r\n                <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => editarTarea()}>Guardar Cambios</button>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lista;","import React, {useEffect, useState} from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\nconst ListaUCOItem=({ item })=>{\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const borrar = () => {\r\n        document.getElementById(item.id).style.display = \"none\";\r\n        console.log(item.id);\r\n        setOpen(!open);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n  \r\n    return(\r\n        <>\r\n          <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleClose(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"info\">\r\n                                                        <h5>¬øRealmente quieres marcar el pedido como entregado?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClick()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n    <tr id={item.id}>\r\n        <td>{item.fact}</td>\r\n        <td>{item.fecha}</td>\r\n        <td>{item.empre}</td>\r\n        <td>${item.total}</td>\r\n        <td className=\"tick\"><CheckCircleIcon style={{color:\"#99ffbb\"}} onClick={()=>handleClick()} /></td>\r\n\r\n      </tr>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ListaUCOItem;","import React, { useState, useEffect } from \"react\";\r\nimport ListaUCOItem from './listaUCOItem';\r\nimport numeral from 'numeral';\r\n\r\nconst ListaUC = () => {\r\n    const [item, setItem] = useState([]);\r\n\r\n    function compare(a, b) {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.fecha.split(\"/\");\r\n        const cantB = b.fecha.split(\"/\");\r\n        let fechaA = cantA[0];\r\n        let fechaB = cantB[0];\r\n        if (fechaA < 10) {\r\n            fechaA = '0' + fechaA;\r\n        }\r\n        if (fechaB < 10) {\r\n            fechaB = '0' + fechaB;\r\n        }\r\n        let comparison = 0;\r\n        if (fechaA > fechaB) {\r\n            comparison = 1;\r\n        } else if (fechaA < fechaB) {\r\n            comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        const mes = today.getMonth() + 1\r\n        const elem = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            const a = Math.round(Math.random() * (25) + 0);\r\n            let num = String.fromCharCode(65 + a);\r\n            const empresa = 'Empresa ' + num;\r\n            const bol = Math.round(Math.random() * (9000) + 1000);\r\n            const tot = numeral(Math.round(Math.random() * (90000) + 10000)).format(0, 0);\r\n            let dia = Math.round(Math.random() * (3) + 0) + today.getDate();\r\n            console.log(today.getDate() + \"/\" + mes + \"/\" + today.getFullYear());\r\n            const f = dia + \"/\" + mes + \"/\" + today.getFullYear();\r\n            let valor = {\r\n                id: i+\"A\",\r\n                fact: bol,\r\n                fecha: f,\r\n                empre: empresa,\r\n                total: tot\r\n            };\r\n            elem.push(valor);\r\n        }\r\n        const el = elem.sort(compare);\r\n        setItem(el);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <table className=\"table table-bordered text-light\">\r\n            <thead className=\"cabecera\">\r\n                <tr>\r\n                    <th>N¬∞ Factura</th>\r\n                    <th>Fecha de entrega</th>\r\n                    <th>Empresa</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {item.map(item => (\r\n                    <ListaUCOItem key={item.id} item={item} />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ListaUC;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Cards from './Cards';\r\nimport Lista from './Lista';\r\nimport ListaUC from './ListaUC';\r\n\r\nconst Home = ({ elementos, item }) => {\r\n    const [datos, setDatos] = useState({});\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: false,\r\n                        min: 60000,\r\n                        max: 110000                    \r\n                        \r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    }\r\nconst valores = [100000, 70000, 90000, 75000, 85000, 70000, 95000, 80000, 90000, 100000, 75000];\r\nconst valoresStatic = [85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000];\r\nconst etiq =['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00'];\r\n    const generadorDatos = (canvas) => {\r\n        const today = new Date(Date.now());\r\n\r\n        const label = ['8:00'];\r\n        console.log(today.getHours());\r\n        if (today.getHours() > 8 && today.getHours() < 19) {\r\n            let inicio = today.getHours()-8;\r\n            let datos = valores.slice(0, inicio);\r\n            let bas = valoresStatic.slice(0, inicio);\r\n            let label = etiq.slice(0, inicio);\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const gradient = ctx.createLinearGradient(0, 120, 0, 200);\r\n            gradient.addColorStop(0.25, 'rgba(29,140,248,0.5)');\r\n            gradient.addColorStop(0.63, 'rgb(39, 41, 61)');\r\n            gradient.addColorStop(0.85, 'rgb(39, 41, 61)');\r\n            console.log(label);\r\n            const dataChart = {\r\n                labels: label,\r\n                datasets: [\r\n                    {\r\n                        label: 'Ventas esperadas por hora',\r\n                        fill: false,\r\n                        borderColor: '#e14eca',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: '#ed92df',\r\n                        pointBackgroundColor: '#fbe9f9f',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: '#f8d3f2',\r\n                        pointHoverBorderColor: '#831673',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadius: 10,\r\n                        data: bas,\r\n                    },\r\n\r\n                    {\r\n                        label: 'Ventas hoy',\r\n                        fill: true,\r\n                        backgroundColor: gradient,\r\n                        borderColor: 'rgb(29,140,248)',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: 'rgb(29,140,248)',\r\n                        pointBackgroundColor: 'rgb(255,255,255)',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: 'rgb(255,255,255)',\r\n                        pointHoverBorderColor: 'rgb(29,140,248)',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadius: 10,\r\n                        data: datos\r\n\r\n                    }\r\n                ]\r\n            };\r\n            return dataChart;\r\n        }\r\n        else {\r\n            let datos = valores;\r\n            let bas = valoresStatic;\r\n            let label = etiq;\r\n            const ctx = canvas.getContext(\"2d\");       const gradient = ctx.createLinearGradient(0, 120, 0, 300);\r\n            gradient.addColorStop(0.3, 'rgba(29,140,248,0.5)');\r\n            gradient.addColorStop(0.8, 'rgba(39, 41, 61, 0.3)');\r\n            gradient.addColorStop(0.7, 'rgba(39, 41, 61,0.3)');\r\n            console.log(datos[0]);\r\n            const dataChart = {\r\n                labels: label,\r\n                datasets: [\r\n                    {\r\n                        label: 'Ventas esperadas por hora',\r\n                        fill: false,\r\n                        borderColor: '#e14eca',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: '#ed92df',\r\n                        pointBackgroundColor: '#fbe9f9f',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: '#f8d3f2',\r\n                        pointHoverBorderColor: '#831673',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadius: 10,\r\n                        data: bas,\r\n                    },\r\n\r\n                    {\r\n                        label: 'Ventas hoy',\r\n                        fill: true,\r\n                        backgroundColor: gradient,\r\n                        borderColor: 'rgba(29,140,248,0.7)',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: 'rgb(29,140,248)',\r\n                        pointBackgroundColor: 'rgb(255,255,255)',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: 'rgb(255,255,255)',\r\n                        pointHoverBorderColor: 'rgb(29,140,248)',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadiu7s: 10,\r\n                        data: datos\r\n\r\n                    }\r\n                ]\r\n            };\r\n            return dataChart;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const canvas = document.createElement('canvas');\r\n        const a = generadorDatos(canvas);\r\n        setDatos(a);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"contenedorHome text-light\">\r\n            <div className=\"row ml-3\">\r\n                <div className=\"col-lg-8 homeElement\">\r\n                    <h2 className=\"mt-3 ml-3 \">Ventas hoy</h2>\r\n                    <Line className=\"homeElement chart\" data={datos} options={options} />\r\n                </div>\r\n                <div className=\"col-lg-3 ml-5 mr-auto tarjetas homeElement\">\r\n                    <Cards elementos={elementos} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-4 ml-3\">\r\n                <div className=\"col-lg-5 mr-5 listaHome listaHomeSmall\">\r\n                    <h4 className=\"mt-4 mb-4\" >Tareas</h4>\r\n                    <Lista user={item} />\r\n                </div>\r\n                <div className=\"col-lg-6 listaHome insumo\">\r\n                    <h4 className=\"mt-4 mb-4\">Insumos en camino</h4>\r\n                    <ListaUC />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst ListaItem = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre= item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const date = item.fecha;\r\n    const fecha = date.split('-');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            name: item.id + \" name\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\",\r\n            fe: fecha\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>{item.direccion}</td>\r\n                <td>mail: {item.mail} <br></br>\r\n                    telefono: {item.phono}\r\n                </td>\r\n                <td>{fecha[2]}/{fecha[1]}/{fecha[0]}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Editar Cliente</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.name}>Nombre: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.dirr}>Direcci√≥n: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.mail}>Mail: </label>\r\n                                <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.phone}>Telefono: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaItem;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Proveedores = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickSB = () => {\r\n    setOpen(!open);\r\n};\r\n\r\nconst handleCloseSB = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\nconst borrar = () => {\r\n    const eleNode = ele.current;\r\n    eleNode.style.display = \"none\";\r\n    setAnchorEl(null);\r\n    setOpen(!open);\r\n}\r\n\r\nreturn (\r\n    <>\r\n        <tr id={id.id} ref={ele}>\r\n            <td>{item.nombre} {item.apellido}</td>\r\n            <td>{item.empresa}</td>\r\n            <td>mail: {item.mail} <br></br>\r\n                telefono: {item.phono}\r\n            </td>\r\n            <td>{item.direccion}</td>\r\n            <td>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n              <MenuItem  onClick={()=>handleClickSB()}>Borrar</MenuItem>\r\n            </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleCloseSB(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"error\">\r\n                                                        <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClickSB()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n\r\n\r\n               \r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar proveedor</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.name}>Nombre: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.trab}>Empresa: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.empresa} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.mail}>Mail: </label>\r\n                                    <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.phone}>Telefono: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.dirr}>Direcci√≥n: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Proveedores;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Trab = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td> \r\n                    <img src={item.foto} alt='Avatar' style={{ width: '40px' }}></img></td>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>{item.tipo}</td>\r\n                <td>mail: {item.mail} <br></br>\r\n                telefono: {item.phono}\r\n                </td>\r\n                <td>{item.direccion}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar trabajador</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-md-4 mt-3\">\r\n                                <img className=\"imagen ml-3\" src={item.foto} style={{border:\"1px solid white\", padding:\"0\"}}></img>\r\n                            </div>\r\n                            <div className=\"col-md-8 mt-3\">\r\n                                <div className=\"row texto\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.name}>Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.trab}>Usuario: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.tipo} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.mail}>Mail: </label>\r\n                                        <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.phone}>Telefono: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.dirr}>Direcci√≥n: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Trab;\r\n","export default __webpack_public_path__ + \"static/media/avatar.4670a339.jpg\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst ListaItemSmall = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n\r\n    \r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickSB = () => {\r\n    setOpen(!open);\r\n};\r\n\r\nconst handleCloseSB = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\nconst getModalStyle = () => {\r\n    const top = '15%';\r\n    const left = '15%'\r\n\r\n    return {\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:\"transparent\"\r\n      },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '70%',\r\n        backgroundColor: 'rgb(39, 41, 61)',\r\n        marginLeft: '15%',\r\n        border: 'none',\r\n        marginTop: '5%',\r\n        padding: '0',\r\n        maxHeight:'100%',\r\n        overflow: 'scroll'    \r\n    },\r\n}));\r\n\r\nconst classes = useStyles();\r\n// getModalStyle is not a pure function, we roll the style only on the first render\r\nconst [modalStyle] = React.useState(getModalStyle);\r\n\r\n    useEffect(() => {\r\n      \r\n        setid({\r\n            id: item.id,\r\n            name: item.id + \" name\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\",\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n   \r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>mail: {item.mail}\r\n                </td>\r\n                <td>\r\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n              <MenuItem  onClick={()=>handleClickSB()}>Borrar</MenuItem>\r\n            </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleCloseSB(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"error\">\r\n                                                        <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClickSB()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Editar Cliente</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.name}>Nombre: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.dirr}>Direcci√≥n: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.mail}>Mail: </label>\r\n                                <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.phone}>Telefono: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaItemSmall;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ProveedoresSmall = ({ item }) => {\r\n    \r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickSB = () => {\r\n    setOpen(!open);\r\n};\r\n\r\nconst handleCloseSB = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\nconst borrar = () => {\r\n    const eleNode = ele.current;\r\n    eleNode.style.display = \"none\";\r\n    setAnchorEl(null);\r\n    setOpen(!open);\r\n}\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n        <tr id={id.id} ref={ele}>\r\n            <td>{item.nombre} {item.apellido}<br />{item.empresa}</td>\r\n            <td>Fono: {item.phono}\r\n            </td>\r\n            <td>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n              <MenuItem  onClick={()=>handleClickSB()}>Borrar</MenuItem>\r\n            </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleCloseSB(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"error\">\r\n                                                        <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClickSB()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n\r\n\r\n               \r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar proveedor</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                                <div className=\"col-md-12\">\r\n                                    <label for={id.name}>Nombre: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.trab}>Empresa: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.empresa} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}} ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.mail}>Mail: </label>\r\n                                    <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.phone}>Telefono: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.dirr}>Direcci√≥n: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <button className=\"btn btn-danger mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProveedoresSmall;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst TrabSmall = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n\r\n    const tipo = ['Administrador', 'Trabajador']\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td> \r\n                    <img src={item.foto} alt='Avatar' style={{ width: '40px' }}></img></td>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>{item.tipo}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar trabajador</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-md-4 mt-3\">\r\n                                <img className=\"imagen ml-3\" src={item.foto} style={{border:\"1px solid white\", padding:\"0\"}}></img>\r\n                            </div>\r\n                            <div className=\"col-md-8 mt-3\">\r\n                                <div className=\"row texto\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.name}>Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.trab}>Usuario: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.tipo} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.mail}>Mail: </label>\r\n                                        <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.phone}>Telefono: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.dirr}>Direcci√≥n: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.direction} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TrabSmall;\r\n","import React from 'react';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, nextPage, prevPage, currentPage }) => {\r\n    const pageNumbers = [];\r\n    const matches = useMediaQuery('(min-width:400px)');\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\nif(currentPage>1 && currentPage<pageNumbers.length){\r\n    return (\r\n        \r\n        <nav>\r\n           { matches ? \r\n           <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}>Anterior</button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\">{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}>Siguiente</button>\r\n                </li>\r\n            </ul>\r\n            :\r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            }\r\n        </nav>\r\n    );\r\n            }\r\n    else {\r\n        if(currentPage==1){\r\n            return (\r\n        \r\n                <nav>\r\n                    { matches ? \r\n           <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()} disabled>Anterior</button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\">{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}>Siguiente</button>\r\n                </li>\r\n            </ul>\r\n            :\r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()} disabled><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            }\r\n                </nav>\r\n            );\r\n        }\r\n        else{\r\n            return (        \r\n                <nav>\r\n                     { matches ? \r\n           <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}>Anterior</button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\">{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()} disabled>Siguiente</button>\r\n                </li>\r\n            </ul>\r\n            :\r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()} disabled><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            }\r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListaItem from './ListaItem';\r\nimport Proveedores from './Proveedore';\r\nimport Trab from './Trab';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport avatar from '../avatar.jpg'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ListaItemSmall from './ListaItemSmall';\r\nimport ProveedoresSmall from './ProveedoreSmall';\r\nimport TrabSmall from './TrabSmall';\r\nimport Pagination from '../ventas/Pagination';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nModal.setAppElement('#root');\r\n\r\nconst ListaCliente = ({ query, tipo }) => {\r\n    const [item, setItem] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [openB, setOpenB] = useState(false);\r\n    const [openM, setOpenM] = useState(false);\r\n    const matches630 = useMediaQuery('(min-width:760px)');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n      // Get current posts\r\n      const indexOfLastPost = currentPage * postsPerPage;\r\n      const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n      const currentPosts = item.slice(indexOfFirstPost, indexOfLastPost);\r\n  \r\n      // Change page\r\n      const paginate = pageNumber => setCurrentPage(pageNumber);\r\n      const nextPage = () => setCurrentPage(currentPage + 1);\r\n      const prevPage = () => setCurrentPage(currentPage - 1);\r\n  \r\n      //Cliente\r\n      const [aniadidoArrow, setAniadidoArrow] = useState(false);\r\n      const [nombreArrow, setNombreArrow] = useState(false);\r\n  \r\n      //Proveedor\r\n      const [nameArrow, setNameArrow] = useState(false);\r\n      const [empresaArrow, setEmpresaArrow] = useState(false);\r\n  \r\n  \r\n      //Trabajador\r\n      const [trabArrow, setTrabArrow] = useState(false);\r\n      const [tipoArrow, setTipoArrow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=${query}`\r\n                );\r\n                console.log(result.data.results[0].registered.date);\r\n                const array1 = result.data.results;\r\n                let elementos = [];\r\n                console.log(\"Query \" +query);\r\n                const tipo = ['Administrador', 'Trabajador']\r\n                for (let i = 0; i < query; i++) {\r\n                    console.log(result.data.results.registered);\r\n                    const a = Math.round(Math.random() * (25) + 0);\r\n                    let num = String.fromCharCode(65 + a);\r\n                    const tipoUser = Math.round(Math.random() * (1) + 0);\r\n                    const fech = result.data.results[i].registered.date;\r\n                    const fechita = fech.split(\"T\");\r\n                    let usuarios = {\r\n                        id: \"usuarios \" + i,\r\n                        nombre: array1[i].name.first,\r\n                        apellido: array1[i].name.last,\r\n                        direccion: array1[i].location.street.name + \" \" + array1[i].location.street.number + \", \" + array1[i].location.city,\r\n                        phono: array1[i].phone,\r\n                        mail: array1[i].email,\r\n                        fecha: fechita[0],\r\n                        empresa: \"Empresa \" + num,\r\n                        foto: array1[i].picture.large,\r\n                        tipo: tipo[tipoUser],\r\n                    }\r\n                    elementos.push(usuarios);\r\n                }\r\n                console.log(\"elementos \" + elementos);\r\n                setItem(elementos);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClickB = () => {\r\n        setOpenB(true);\r\n    };\r\n\r\n    const handleCloseB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenB(false);\r\n    };\r\n\r\n    const handleClickM = () => {\r\n        setOpenM(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleCloseM = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenM(false);\r\n    };\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            paddingLeft: \"15%\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n  \r\n\r\n    const compareAnia = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const eleA = a.fecha.split(\"-\");\r\n        const eleB = b.fecha.split(\"-\");\r\n        const cantA = new Date(eleA[0], eleA[1], eleA[2]);\r\n        const cantB = new Date(eleB[0], eleB[1], eleB[2]);\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareName = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.nombre;\r\n        const cantB = b.nombre;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareEmpresa = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.empresa;\r\n        const cantB = b.empresa;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareTipo = (a, b) => {\r\n        const cantA = a.tipo;\r\n        const cantB = b.tipo;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        switch (i) {\r\n            //Cliente: \r\n\r\n            //A√±adido\r\n            case 0:\r\n                let ania = item.sort(compareAnia);\r\n                if (aniadidoArrow) {\r\n                    setItem(ania.reverse());\r\n                }\r\n                else {\r\n                    setItem(ania);\r\n                }\r\n                setAniadidoArrow(!aniadidoArrow);\r\n                setNombreArrow(false);\r\n                break;\r\n            //Nombre\r\n            case 1:\r\n                let name = item.sort(compareName);\r\n                if (nombreArrow) {\r\n                    setItem(name.reverse());\r\n                }\r\n                else {\r\n                    setItem(name);\r\n                }\r\n                setAniadidoArrow(false);\r\n                setNombreArrow(!nombreArrow);\r\n                break;\r\n\r\n            //Proveedor:\r\n            //Nombre\r\n            case 2:\r\n                let prov = item.sort(compareName);\r\n                if (nameArrow) {\r\n                    setItem(prov.reverse());\r\n                }\r\n                else {\r\n                    setItem(prov);\r\n                }\r\n                setNameArrow(!nameArrow);\r\n                setEmpresaArrow(false);\r\n                break;\r\n            //Empresa\r\n            case 3:\r\n                let emp = item.sort(compareEmpresa);\r\n                if (empresaArrow) {\r\n                    setItem(emp.reverse());\r\n                }\r\n                else {\r\n                    setItem(emp);\r\n                }\r\n                setEmpresaArrow(!empresaArrow);\r\n                setNameArrow(false);\r\n                break;\r\n\r\n            //Trabajador\r\n            //Nombre\r\n            case 4:\r\n                let nameTrab = item.sort(compareName);\r\n                if (trabArrow) {\r\n                    setItem(nameTrab.reverse());\r\n                }\r\n                else {\r\n                    setItem(nameTrab);\r\n                }\r\n                setTrabArrow(!trabArrow);\r\n                setTipoArrow(false);\r\n                break;\r\n            //Tipo\r\n            case 5:\r\n                let tipo = item.sort(compareTipo);\r\n                if (tipoArrow) {\r\n                    setItem(tipo.reverse());\r\n                }\r\n                else {\r\n                    setItem(tipo);\r\n                }\r\n                setTrabArrow(false);\r\n                setTipoArrow(!tipoArrow);\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (tipo == '1') {\r\n        return (\r\n            <>\r\n                <div className=\"contenedor \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-1 mb-4\">\r\n                            <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4\">\r\n                            <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                                <button className=\"btn btn-primary\" onClick={() => handleClickB()} ><SearchIcon /> </button>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                            </div>\r\n                        </div>\r\n                        <Snackbar open={openB}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleCloseB(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleCloseB(e)} severity=\"error\">\r\n                                ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n                        </Snackbar>\r\n\r\n                        <Snackbar open={openM}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleCloseM(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleCloseM(e)} severity=\"error\">\r\n                                ¬°Alerta! No se pueden hacer cambios en la version de prueba\r\n                                                    </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                    <div className=\"table-responsive-md tabla cardHome mt-0\">\r\n                        <h4 className=\"titulo\">Clientes:</h4>\r\n                        {matches630 ?\r\n                            <table className=\"table text-white\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Direcci√≥n</th>\r\n                                        <th>Contacto</th>\r\n                                        <th onClick={() => handleClick(0)}>A√±adido{aniadidoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentPosts.map(item => (\r\n                                        <ListaItem key={item.id} item={item} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            :\r\n                            <table className=\"table text-white\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Contacto</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentPosts.map(item => (\r\n                                        <ListaItemSmall key={item.id} item={item} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        }\r\n\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={item.length}\r\n                            paginate={paginate}\r\n                            nextPage={nextPage}\r\n                            prevPage={prevPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3 ml-3`} >\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T pt-3 pl-3\">A√±adir Cliente</h2>\r\n                        </header>\r\n                        <main>\r\n                            <div className=\"row ml-3\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <div className=\"row texto\"  style={{background: \"transparent\", color:\"white\"}}>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"code\">Nombre: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"code\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"descripcion\">Email: </label>\r\n                                            <input type=\"email\" className=\"form-control\" id=\"descripcion\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"prov\">Telefono: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"prov\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"costoC\">Direcci√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"costoC\" ></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n    else if (tipo == '2') {\r\n        return (\r\n            <>\r\n                <div className=\"contenedor \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-1 mb-4\">\r\n                            <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4\">\r\n                            <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                                <button className=\"btn btn-primary\" onClick={() => handleClickB()} ><SearchIcon /> </button>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                            </div>\r\n                        </div>\r\n                        <Snackbar open={openB}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleCloseB(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleCloseB(e)} severity=\"error\">\r\n                                ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n                        </Snackbar>\r\n\r\n                        <Snackbar open={openM}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleCloseM(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleCloseM(e)} severity=\"error\">\r\n                                ¬°Alerta! No se pueden hacer cambios en la version de prueba\r\n                                                    </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                    <div className=\"table-responsive-md tabla  cardHome\">\r\n                        <h4 className=\"titulo\">Proveedores:</h4>\r\n\r\n                        {matches630 ?\r\n                            <table className=\"table text-white\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th onClick={() => handleClick(2)}>Nombre{nameArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th onClick={() => handleClick(3)}>Empresa{empresaArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Contacto</th>\r\n                                        <th>Direcci√≥n</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentPosts.map(item => (\r\n                                        <Proveedores key={item.id} item={item} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            :\r\n                            <table className=\"table text-white\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th onClick={() => handleClick(2)}>Nombre{nameArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Contacto</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {currentPosts.map(item => (\r\n                                        <ProveedoresSmall key={item.id} item={item} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        }\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={item.length}\r\n                            paginate={paginate}\r\n                            nextPage={nextPage}\r\n                            prevPage={prevPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3 ml-3`} >\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T pt-3 pl-3\">A√±adir Proveedor</h2>\r\n                        </header>\r\n                        <main>\r\n                            <div className=\"row \">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <div className=\"row texto\">\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"code\">Nombre: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"code\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"name\">Empresa: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"name\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"descripcion\">Email: </label>\r\n                                            <input type=\"email\" className=\"form-control\" id=\"descripcion\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"prov\">Telefono: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"prov\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"costoC\">Direcci√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"costoC\" ></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <div className=\"contenedor \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-1 mb-4\">\r\n                            <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4\">\r\n                            <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                                <button className=\"btn btn-primary\" onClick={() => handleClickB()} ><SearchIcon /> </button>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                            </div>\r\n                        </div>\r\n                        <Snackbar open={openB}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleCloseB(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleCloseB(e)} severity=\"error\">\r\n                                ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n                        </Snackbar>\r\n\r\n                        <Snackbar open={openM}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleCloseM(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleCloseM(e)} severity=\"error\">\r\n                                ¬°Alerta! No se pueden hacer cambios en la version de prueba\r\n                                                    </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                    <div className=\"table-responsive-md tabla  cardHome\">\r\n                        <h4 className=\"titulo\">Trabajadores:</h4>\r\n                        <table className=\"table text-white\">\r\n                            <thead>\r\n                                {matches630 ?\r\n                                    <tr>\r\n                                        <th>Foto</th>\r\n                                        <th onClick={() => handleClick(4)}>Nombre{trabArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th onClick={() => handleClick(5)}>Tipo{tipoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Contacto</th>\r\n                                        <th>Direcci√≥n</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                    :\r\n                                    <tr>\r\n                                        <th>Foto</th>\r\n                                        <th onClick={() => handleClick(4)}>Nombre{trabArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th onClick={() => handleClick(5)}>Tipo{tipoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                }\r\n                            </thead>\r\n                            {matches630 ?\r\n                                <tbody>\r\n                                    {currentPosts.map(item => (\r\n                                        <Trab key={item.id} item={item} />\r\n                                    ))}\r\n                                </tbody>\r\n                                :\r\n                                <tbody>\r\n                                    {currentPosts.map(item => (\r\n                                        <TrabSmall key={item.id} item={item} />\r\n                                    ))}\r\n                                </tbody>\r\n                            }\r\n                        </table>\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={item.length}\r\n                            paginate={paginate}\r\n                            nextPage={nextPage}\r\n                            prevPage={prevPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3 ml-3`} >\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T pt-3 pl-3\">A√±adir Trabajador</h2>\r\n                        </header>\r\n                        <main>\r\n                            <div className=\"row \">\r\n                                <div className=\"col-md-4 mt-3\">\r\n                                    <img className=\"imagen\" src={avatar}></img>\r\n                                </div>\r\n                                <div className=\"col-md-8 mt-3\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"code\">Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"code\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"rol\">Rol: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"rol\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"descripcion\">Email: </label>\r\n                                        <input type=\"email\" className=\"form-control\" id=\"descripcion\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"prov\">Telefono: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"prov\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"costoC\">Direcci√≥n: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"costoC\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"file\" className=\"form-control-file border\" name=\"file\"></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListaCliente;","import React, { useState, useEffect } from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nconst TimelinePerfil = ({ item }) => {\r\n  const [fechas, setFechas] = useState([]);\r\n  const [texto, setTexto] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n  const mesTotal = (mesA) => {\r\n    if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n      return 31;\r\n    }\r\n    else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n      return 30;\r\n    }\r\n    else {\r\n      return 28;\r\n    }\r\n  }\r\n  const matches = useMediaQuery('(min-width:400px)');\r\n  const matches2 = useMediaQuery('(min-width:330px)');\r\n\r\n  useEffect(() => {\r\n    const today = new Date(Date.now());\r\n    let day = today.getDate();\r\n    let month = today.getMonth() + 1;\r\n    let year = today.getFullYear();\r\n\r\n    if (day < 6) {\r\n      let mes = mesTotal(month - 2);\r\n      let c = 5 - day;\r\n      let t = mes - c;\r\n      let array1 = [];\r\n      for (let i = 0; i <= c; i++) {\r\n        let a = t + i;\r\n        let b = month - 1;\r\n        if (month - 1 < 10) {\r\n          b = \"0\" + b;\r\n        }\r\n\r\n        array1.push(a + \"/\" + b + \"/\" + year);\r\n      }\r\n\r\n      for (let j = 1; j <= day; j++) {\r\n        array1.push(\"0\" + j + \"/\" + month + \"/\" + year);\r\n      }\r\n\r\n      setFechas(array1);\r\n    }\r\n\r\n    else {\r\n      let c = day - 5;\r\n      let array2 = [];\r\n      for (let i = c; i <= day; i++) {\r\n        array2.push(i + \"/\" + month + \"/\" + year);\r\n      }\r\n      setFechas(array2);\r\n    }\r\n\r\n  }, []);\r\n\r\n  const handleClick = (a) => {\r\n    setOpen(true);\r\n    setTexto(a);\r\n};\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\n\r\n  return (\r\n    <>\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={(e) => handleClose(e)}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        key={\"top\" + \"center\"}\r\n      >\r\n\r\n        <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n          {texto}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n        <Timeline align=\"right\" className=\"text-white\" style={{ justifyContent: \"center\", padding: \"0\" }}>\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\">\r\n                Today - 9:30 am <br />\r\n                {item.name.first} ha iniciado la tarea 7\r\n          </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color=\"primary\" variant=\"outlined\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n          </TimelineItem>\r\n\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\">\r\n                {fechas[4]}- 12:50 pm <br />\r\n                {item.name.first} ha reportado un error en la tarea 3 (#2)\r\n          </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color=\"primary\" variant=\"outlined\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n          </TimelineItem>\r\n\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\">\r\n                {fechas[3]} - 17:15 pm <br />\r\n                {item.name.first} ha terminado la tarea 5\r\n          </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color=\"primary\" variant=\"outlined\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n          </TimelineItem>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <a className=\"linkPerfil\" onClick={() => handleClick('No implementado en la version de prueba')}>Ver m√°s...</a>\r\n          </div>\r\n        </Timeline>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimelinePerfil;","import React from 'react';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst Paginacion = ({ postsPerPage, totalPosts, paginate, nextPage, prevPage, currentPage }) => {\r\n    const pageNumbers = [];\r\n    \r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\nif(currentPage>1 && currentPage<pageNumbers.length){\r\n    return (\r\n        \r\n        <nav>\r\n          \r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n           \r\n        </nav>\r\n    );\r\n            }\r\n    else {\r\n        if(currentPage==1){\r\n            return (\r\n        \r\n                <nav>\r\n                    \r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()} disabled><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            \r\n                </nav>\r\n            );\r\n        }\r\n        else{\r\n            return (        \r\n                <nav>\r\n                     \r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()} disabled><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            \r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default Paginacion;","import React, { useState, useEffect } from 'react';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst TimelineNew = ({ item }) => {\r\n    const [fechas, setFechas] = useState([]);\r\n    const [texto, setTexto] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n    const matches = useMediaQuery('(min-width:400px)');\r\n    const matches2 = useMediaQuery('(min-width:330px)');\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 6) {\r\n            let mes = mesTotal(month - 2);\r\n            let c = 5 - day;\r\n            let t = mes - c;\r\n            let array1 = [];\r\n            for (let i = 0; i <= c; i++) {\r\n                let a = t + i;\r\n                let b = month - 1;\r\n                if (b < 10) {\r\n                    b = \"0\" + b;\r\n                }\r\n\r\n                array1.push(a + \"/\" + b + \"/\" + year);\r\n            }\r\n\r\n            for (let j = 1; j <= day; j++) {\r\n                let aa = month;\r\n                if (aa < 10) {\r\n                    aa = \"0\" + aa;\r\n                }\r\n                console.log(aa);\r\n                array1.push(\"0\" + j + \"/\" + aa + \"/\" + year);\r\n            }\r\n\r\n            setFechas(array1);\r\n        }\r\n\r\n        else {\r\n            let c = day - 5;\r\n            let array2 = [];\r\n            for (let i = c; i <= day; i++) {\r\n                let aa = month;\r\n                let d = i;\r\n                if (aa < 10) {\r\n                    aa = \"0\" + aa;\r\n                }\r\n                if(d<10){\r\n                    d = \"0\"+d;\r\n                }\r\n\r\n                console.log(aa);\r\n                array2.push(\"0\" + d + \"/\" + aa + \"/\" + year);\r\n            }\r\n            setFechas(array2);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = (a) => {\r\n        setOpen(true);\r\n        setTexto(a);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    {texto}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <ul className=\"timeline\">\r\n                <li>\r\n                    <div className=\"timeline-time\">\r\n                        <span className=\"date\">today</span>\r\n                        <span className=\"time\">16 :20</span>\r\n                    </div>\r\n                    <div className=\"timeline-icon\">\r\n                        <AddCircleIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\r\n                    </div>\r\n                    <div className=\"timeline-body text-dark\">\r\n                        <div className=\"timeline-header\">\r\n                            <span className=\"userimage\"><img src={item.picture.large} alt=\"\" /></span>\r\n                            <span className=\"username\"><a className=\"linkPerfil\">{item.name.first}</a> <small></small></span>\r\n                        </div>\r\n                        <div className=\"timeline-content\">\r\n                            <h6> He iniciado la tarea #7</h6>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"timeline-footer\">\r\n                            <a className=\"m-r-15 text-inverse-lighter linkPerfil\" onClick={() => setChecked1(!checked1)}><MessageIcon style={{ color: \"#1f8af8\" }} /> Comentar</a>\r\n                        </div>\r\n                        <>\r\n                            {\r\n                                checked1 ?\r\n\r\n                                    <Grow in={checked1}>\r\n                                        <div className=\"timeline-comment-box\">\r\n                                            <div className=\"user\"><img src={item.picture.large} /></div>\r\n                                            <div className=\"input\">\r\n                                                <form action=\"\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-corner\" placeholder=\"Escribe un comentario...\" />\r\n                                                        <span className=\"input-group-btn p-l-10\">\r\n                                                            <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"> <SendIcon /> </button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grow>\r\n                                    :\r\n                                <></>\r\n                            }\r\n                        </>\r\n                    </div>\r\n                </li>\r\n\r\n\r\n\r\n                <li>\r\n                    <div className=\"timeline-time \">\r\n                        <span className=\"date\">{fechas[4]}</span>\r\n                        <span className=\"time\">12:50</span>\r\n                    </div>\r\n                    <div className=\"timeline-icon\">\r\n                        <ReportProblemIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\r\n                    </div>\r\n                    <div className=\"timeline-body text-dark\">\r\n                        <div className=\"timeline-header\">\r\n                            <span className=\"userimage\"><img src={item.picture.large} alt=\"\" /></span>\r\n                            <span className=\"username\"><a className=\"linkPerfil\">{item.name.first}</a> <small></small></span>\r\n                            \r\n                        </div>\r\n                        <div className=\"timeline-content\">\r\n                            <h6> He reportado un error en la tarea #3 (error #5)</h6>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"timeline-footer\">\r\n                            <a className=\"m-r-15 text-inverse-lighter linkPerfil\" onClick={() => setChecked2(!checked2)}><MessageIcon style={{ color: \"#1f8af8\" }} /> Comentar</a>\r\n                        </div>\r\n                        {\r\n                                checked2 ?\r\n\r\n                                    <Grow in={checked2}>\r\n                                        <div className=\"timeline-comment-box\">\r\n                                            <div className=\"user\"><img src={item.picture.large} /></div>\r\n                                            <div className=\"input\">\r\n                                                <form action=\"\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-corner\" placeholder=\"Escribe un comentario...\" />\r\n                                                        <span className=\"input-group-btn p-l-10\">\r\n                                                            <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"> <SendIcon /> </button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grow>\r\n                                    :\r\n                                <></>\r\n                            }\r\n                    </div>\r\n                </li>\r\n{/* \r\n                <li>\r\n                    <div className=\"timeline-time \">\r\n                        <span className=\"date\">{fechas[3]}</span>\r\n                        <span className=\"time\">17:15</span>\r\n                    </div>\r\n                    <div className=\"timeline-icon\">\r\n                        <CheckCircleIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\r\n                    </div>\r\n                    <div className=\"timeline-body text-dark\">\r\n                        <div className=\"timeline-header\">\r\n                            <span className=\"userimage\"><img src={item.picture.large} alt=\"\" /></span>\r\n                            <span className=\"username\"><a className=\"linkPerfil\">{item.name.first}</a> <small></small></span>\r\n                           \r\n                        </div>\r\n                        <div className=\"timeline-content\">\r\n                            <h6> He terminado la tarea #11</h6>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"timeline-footer\">\r\n                            <a className=\"m-r-15 text-inverse-lighter linkPerfil\" onClick={() => setChecked3(!checked3)}><MessageIcon style={{ color: \"#1f8af8\" }} /> Comentar</a>\r\n                        </div>\r\n                        {\r\n                                checked3?\r\n\r\n                                    <Grow in={checked3}>\r\n                                        <div className=\"timeline-comment-box\">\r\n                                            <div className=\"user\"><img src={item.picture.large} /></div>\r\n                                            <div className=\"input\">\r\n                                                <form action=\"\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-corner\" placeholder=\"Escribe un comentario...\" />\r\n                                                        <span className=\"input-group-btn p-l-10\">\r\n                                                            <button class=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"> <SendIcon /> </button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grow>\r\n                                    :\r\n                                <></>\r\n                            }\r\n                    </div>\r\n                </li> */}\r\n            </ul>\r\n            <div style={{ textAlign: \"center\" }}>\r\n            <a className=\"linkPerfil\" onClick={() => handleClick('No implementado en la version de prueba')}>Ver m√°s...</a>\r\n          </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TimelineNew;\r\n\r\n\r\n/*\r\n<li>\r\n            <div class=\"timeline-time\">\r\n                <span class=\"date\">yesterday</span>\r\n                <span class=\"time\">20:17</span>\r\n            </div>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                <div class=\"timeline-header\">\r\n                    <span class=\"userimage\"><img src=\"https://bootdey.com/img/Content/avatar/avatar3.png\" alt=\"\" /></span>\r\n                    <span class=\"username\">Sean Ngu</span>\r\n                    <span class=\"pull-right text-muted\">82 Views</span>\r\n                </div>\r\n                <div class=\"timeline-content\">\r\n                    <p>Location: United States</p>\r\n                </div>\r\n                <div class=\"timeline-footer\">\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-thumbs-up fa-fw fa-lg m-r-3\"></i> Like</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-comments fa-fw fa-lg m-r-3\"></i> Comment</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-share fa-fw fa-lg m-r-3\"></i> Share</a>\r\n                </div>\r\n            </div>\r\n\r\n        </li>\r\n        <li>\r\n            <div class=\"timeline-time\">\r\n                <span class=\"date\">24 February 2014</span>\r\n                <span class=\"time\">08:17</span>\r\n            </div>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                <div class=\"timeline-header\">\r\n                    <span class=\"userimage\"><img src=\"https://bootdey.com/img/Content/avatar/avatar3.png\" alt=\"\" /></span>\r\n                    <span class=\"username\">Sean Ngu</span>\r\n                    <span class=\"pull-right text-muted\">1,282 Views</span>\r\n                </div>\r\n                <div class=\"timeline-content\">\r\n                    <p class=\"lead\">\r\n                        <i class=\"fa fa-quote-left fa-fw pull-left\"></i>\r\n                        Quisque sed varius nisl. Nulla facilisi. Phasellus consequat sapien sit amet nibh molestie placerat. Donec nulla quam, ullamcorper ut velit vitae, lobortis condimentum magna. Suspendisse mollis in sem vel mollis.\r\n                        <i class=\"fa fa-quote-right fa-fw pull-right\"></i>\r\n                    </p>\r\n                </div>\r\n                <div class=\"timeline-footer\">\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-thumbs-up fa-fw fa-lg m-r-3\"></i> Like</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-comments fa-fw fa-lg m-r-3\"></i> Comment</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-share fa-fw fa-lg m-r-3\"></i> Share</a>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div class=\"timeline-time\">\r\n                <span class=\"date\">10 January 2014</span>\r\n                <span class=\"time\">20:43</span>\r\n            </div>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                <div class=\"timeline-header\">\r\n                    <span class=\"userimage\"><img src=\"https://bootdey.com/img/Content/avatar/avatar3.png\" alt=\"\" /></span>\r\n                    <span class=\"username\">Sean Ngu</span>\r\n                    <span class=\"pull-right text-muted\">1,021,282 Views</span>\r\n                </div>\r\n                <div class=\"timeline-content\">\r\n                    <h4 class=\"template-title\" >\r\n                        <i class=\"fa fa-map-marker text-danger fa-fw\"></i>\r\n                        795 Folsom Ave, Suite 600 San Francisco, CA 94107\r\n                    </h4>\r\n                    <p>In hac habitasse platea dictumst. Pellentesque bibendum id sem nec faucibus. Maecenas molestie, augue vel accumsan rutrum, massa mi rutrum odio, id luctus mauris nibh ut leo.</p>\r\n                    <p class=\"m-t-20\">\r\n                        <img src=\"../assets/img/gallery/gallery-5.jpg\" alt=\"\" />\r\n                    </p>\r\n                </div>\r\n                <div class=\"timeline-footer\">\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-thumbs-up fa-fw fa-lg m-r-3\"></i> Like</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-comments fa-fw fa-lg m-r-3\"></i> Comment</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-share fa-fw fa-lg m-r-3\"></i> Share</a>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                Loading...\r\n             </div>\r\n        </li>\r\n*/","import React, { useEffect, useState } from \"react\";\r\nimport './perfil.css';\r\nimport axios from 'axios';\r\nimport TimelinePerfil from './timeline';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Paginacion from './Paginacion';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from 'react-modal';\r\nimport TimelineNew from \"./TimelineNew\";\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nModal.setAppElement('#root');\r\nconst Perfil = ({ item, tipo }) => {\r\n\r\n    const name = item.name.first + \" \" + item.name.last;\r\n    const web = item.name.first + item.name.last;\r\n    const dir = item.location.street.name + \" #\" + item.location.street.number + \", \" + item.location.city + \", \" + item.location.country;\r\n    const matches = useMediaQuery('(min-width:550px)');\r\n    const matches2 = useMediaQuery('(min-width:300px)');\r\n    const [elementos, setElementos] = useState([]);\r\n    const query = Math.round(Math.random() * (15) + 5);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(8);\r\n    const [trab, setTrab] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    \r\n\r\n    const [trabTipo, setTrabTipo] = useState('');\r\n    const [texto, setTexto] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    useEffect(() => {\r\n        setTrabTipo(\"Desarrollador/a Full Stack\")\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=${query}`\r\n                );\r\n\r\n                const trabajo = [\"Analista\", \"Desarrollador/a full stack\", \"QA tester\", \"Desarrollador/a Backend\", \"Desarrollador/a front end\", \"UX Designer\"];\r\n                setElementos(result.data.results);\r\n\r\n                let tar = [];\r\n                for (let i = 0; i < query; i++) {\r\n                    let val = Math.round(Math.random() * (5) + 0);\r\n                    tar.push(trabajo[val]);\r\n                }\r\n\r\n                setTrab(tar);\r\n                setLoad(true);\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClick = (a) => {\r\n        setOpen(true);\r\n        setTexto(a);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = elementos.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n\r\n    if (Load) {\r\n        return (\r\n            <>\r\n                <div className=\"container-fluid contenedor\">\r\n                    <div className=\"main-body\">\r\n\r\n                        <div className=\"row gutters-sm\">\r\n                            <div className=\"col-md-4 mb-3\">\r\n                                <div className=\"card tarjetaPerfil \">\r\n                                    <div className=\"card-body card-body-perfil\">\r\n                                        <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                            {matches2 ?\r\n                                                <img src={item.picture.large} alt=\"Admin\" className=\"rounded-circle\" width=\"150\" />\r\n                                                :\r\n                                                <img src={item.picture.large} alt=\"Admin\" className=\"rounded-circle\" width=\"100\" />\r\n                                            }\r\n                                            <div className=\"mt-3\">\r\n                                                <h4>{name}</h4>\r\n                                                <p className=\"text-secondary mb-1\">{trabTipo}</p>\r\n                                                <p className=\"text-muted font-size-sm\">{item.location.city}, {item.location.country}</p>\r\n                                                {tipo ?\r\n                                                    <>\r\n                                                        <button className=\"btn btn-primary\" style={{ marginRight: \"2%\" }}>Seguir\r\n                                                    </button> <button className=\"btn btn-outline-primary\">Mensaje</button>\r\n                                                    </>\r\n                                                    :\r\n                                                    <>\r\n                                                        <button className=\"btn btn-primary\" style={{ marginRight: \"2%\" }} disabled>Seguir\r\n                                                    </button> <button className=\"btn btn-outline-primary\" onClick={() => setModalIsOpen(true)}>Editar</button>\r\n                                                    </>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card tarjetaPerfil mt-3\">\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-globe mr-2 icon-inline\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path></svg></h6>\r\n                                            {matches2 ?\r\n                                                <span className=\"text-secondary\">https://{item.name.first}.com</span>\r\n                                                :\r\n                                                <span className=\"text-secondary\">{item.name.first}.com</span>\r\n                                            }\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-github mr-2 icon-inline\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg></h6>\r\n                                            <span className=\"text-secondary\">{web}</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-twitter mr-2 icon-inline text-info\"><path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path></svg></h6>\r\n                                            <span className=\"text-secondary\">@{web}</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-instagram mr-2 icon-inline text-danger\"><rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line></svg></h6>\r\n                                            <span className=\"text-secondary\">{web}</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-facebook mr-2 icon-inline text-primary\"><path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path></svg></h6>\r\n                                            <span className=\"text-secondary\">{name}</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className=\"card tarjetaPerfil mt-3\">\r\n                                    <div className=\"card-body card-body-perfil\">\r\n                                        {matches2 ?\r\n                                            <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-perfil mr-2\">Tareas:</i> Estado proyecto A</h6>\r\n                                            :\r\n                                            <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-perfil mr-2\">Tareas:</i> Proy-A</h6>\r\n                                        }\r\n                                        <small>Backend API</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"88%\" }} aria-valuenow=\"88\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Desarollo Front-end</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"68%\" }} aria-valuenow=\"68\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Cambios solicitados</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"75%\" }} aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Vista Mobile</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"65%\" }} aria-valuenow=\"65\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Revision de errores</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"45%\" }} aria-valuenow=\"45\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-8 peque√±o\">\r\n                                <div className=\"card tarjetaPerfil mb-3\">\r\n                                    <div className=\"card-body card-body-perfil\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Nombre</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {name}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Usuario</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.login.username}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Email</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.email}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Tel√©fono</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.phone}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">M√≥vil</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.cell}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Direcci√≥n</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {dir}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row gutters-sm\">\r\n\r\n                                    <div className=\"col-md-12 peque√±o\">\r\n                                        <div className=\"card tarjetaPerfil mb-3\">\r\n                                            <div className=\"card-body card-body-perfil\">\r\n                                                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                                                    <li className=\"nav-item\">\r\n                                                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#timeline\">Timeline</a>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item\">\r\n                                                       {matches ? \r\n                                                        <a className=\"nav-link\" data-toggle=\"tab\" href=\"#friends\">Colaboradores({elementos.length})</a>:\r\n                                                        <a className=\"nav-link\" data-toggle=\"tab\" href=\"#friends\">Colab.</a>}\r\n                                                    </li>\r\n                                                </ul>\r\n\r\n                                                <div className=\"tab-content\">\r\n                                                    {matches ?\r\n\r\n\r\n\r\n                                                        <div id=\"timeline\" className=\"container-fluid tab-pane active\"><br />\r\n                                                            <TimelineNew item={item}/>\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                        :\r\n                                                        <div id=\"timeline\" className=\"container-fluid tab-pane active\" style={{ padding: \"0\" }}><br />\r\n                                                            <TimelinePerfil item={item} />\r\n                                                        </div>\r\n\r\n                                                    }\r\n\r\n                                                    <div id=\"friends\" className=\"container-fluid tab-pane fade\"><br />\r\n                                                        <div className=\"cards mb-2\">\r\n                                                            {currentPosts.map((user, index) => (\r\n                                                                <div key={user.login.uuid} className=\"flip-card\">\r\n                                                                    <div className=\"flip-card-inner\">\r\n                                                                        <div className=\"flip-card-front\">\r\n                                                                            <img src={user.picture.large} alt={user.name.first} />\r\n                                                                        </div>\r\n                                                                        <Tooltip title=\"ir al perfil\">\r\n                                                                            <div className=\"flip-card-back\" onClick={() => handleClick('No implementado en la versi√≥n de prueba')}>\r\n                                                                                <p aria-label=\"ir al perfil\" >{user.name.first} {user.name.last}</p>\r\n                                                                                <span style={{ fontSize: \"10px\" }}>{trab[index]}</span>\r\n                                                                            </div>\r\n                                                                        </Tooltip>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                        {elementos.length > 12 ?\r\n                                                            <Paginacion\r\n                                                                postsPerPage={postsPerPage}\r\n                                                                totalPosts={elementos.length}\r\n                                                                paginate={paginate}\r\n                                                                nextPage={nextPage}\r\n                                                                prevPage={prevPage}\r\n                                                                currentPage={currentPage}\r\n                                                            />\r\n                                                            :\r\n                                                            <></>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        {texto}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n\r\n\r\n\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3`}>\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T mt-5 ml-5\">Editar</h2>\r\n                        </header>\r\n                        <main>\r\n                            <div className=\"row texto ml-5\">\r\n                                <div class=\"col-md-4 col-xl-3\">\r\n                                    <div class=\"profile-img\">\r\n                                        <img src={item.picture.large} alt=\"Admin\" />\r\n                                        <div class=\"file btn btn-lg btn-primary\">\r\n                                            Change Photo\r\n                                <input type=\"file\" name=\"file\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-xl-9 mt-3\">\r\n\r\n                                    <div className=\"row texto\">\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}name`}>Nombre: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={`${item.name.first} ${item.name.last}`} id={`${item.login.uuid}name`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}user`}>Usuario: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={item.login.username} id={`${item.login.uuid}user`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}pass`}>Contrase√±a: </label>\r\n                                            <input type=\"password\" className=\"form-control\" value={item.login.password} id={`${item.login.uuid}pass`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}prof`}>Profesi√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={trabTipo} id={`${item.login.uuid}prof`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}mail`}>Mail: </label>\r\n                                            <input type=\"email\" className=\"form-control\" value={item.email} id={`${item.login.uuid}mail`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}phone`}>Tel√©fono: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={item.phone} id={`${item.login.uuid}phone`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}movil`}>M√≥vil: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={item.cell} id={`${item.login.uuid}movil`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}dirr`}>Direcci√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={dir} id={`${item.login.uuid}dirr`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => { handleClick('No implementado en la versi√≥n de prueba'); setModalIsOpen(false) }}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Perfil","export default __webpack_public_path__ + \"static/media/product.2e0c9e7a.png\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst ItemProducto = ({ item }) => {\r\n    const costo = numeral(item.costo).format(0, 0);\r\n    const price = numeral(item.price).format(0, 0);\r\n    const cant = numeral(item.cant).format(0, 0);\r\n    const matches630 = useMediaQuery('(min-width: 765px)');\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [id, setid] = useState({});\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n\r\n    \r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            cod: item.id + \" cod\",\r\n            name: item.id + \" name\",\r\n            cost: item.id + \" cost\",\r\n            price: item.id + \" price\",\r\n            inv: item.id + \"inv\",\r\n            min: item.id + \"min\",\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n<tr id={id.id} ref={ele}>\r\n                <td className=\"centrada\"><img className=\"\" src={item.image} style={{ height: '40px', alignSelf: \"center\" }}></img></td>\r\n                <td className=\"justi\" >{item.cod}</td>\r\n                <td className=\"justi\" >{item.title}</td>\r\n                <td className=\"centrada\">${costo}</td>\r\n                <td className=\"centrada\">${price}</td>\r\n                <td className=\"centrada\">{cant}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Editar Producto</h2>\r\n                    </header>\r\n                    <main>\r\n                    <div className=\"row \">\r\n                    {matches630 ?\r\n                                 <div className=\"col-sm-4 mt-3\">\r\n                                <img className=\"imagen\" src={item.image}></img>\r\n                            </div> \r\n                            : \r\n                            <div></div>}\r\n                            <div className=\"col-md-8 mt-3\">\r\n                                <div className=\"row texto\">\r\n                        <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.cod}>C√≥digo: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.cod} id={id.cod} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.name}>Nombre: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.title} id={id.name} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.cost}>Costo compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={`$${costo}`} id={id.cost} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.price}>Precio venta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={`$${price}`} id={id.price} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.inv}>Existencias: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.cant} id={id.inv} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.min}>Existencia minima: </label>\r\n                                <input type=\"text\" className=\"form-control\" value=\"2\" id={id.min} disabled style={{background:\"transparent\"}}></input>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-3\">\r\n                                <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ItemProducto;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ItemProductoLT = ({ item }) => {\r\n    const costo = numeral(item.costo).format(0, 0);\r\n    const price = numeral(item.price).format(0, 0);\r\n    const cant = numeral(item.cant).format(0, 0);\r\n    const matches630 = useMediaQuery('(min-width: 560px)');\r\n\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [id, setid] = useState({});\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            cod: item.id + \" cod\",\r\n            name: item.id + \" name\",\r\n            cost: item.id + \" cost\",\r\n            price: item.id + \" price\",\r\n            inv: item.id + \"inv\",\r\n            min: item.id + \"min\",\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <tr id={id.id} ref={ele}>\r\n                <td className=\"justi\" >{item.title}</td>\r\n                <td className=\"centrada\">${price}</td>\r\n                <td className=\"centrada\">{item.cant}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon fontSize=\"small\"/></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h4 className=\"h1T mt-5 ml-5\">Editar Producto</h4>\r\n                    </header>\r\n                    <main>\r\n                                <div className=\"row texto ml-5\">\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.cod}>C√≥digo: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.cod} id={id.cod} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.name}>Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.title} id={id.name} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.cost}>Costo compra: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={`$${costo}`} id={id.cost} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.price}>Precio venta: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={`$${price}`} id={id.price} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.inv}>Existencias: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.cant} id={id.inv} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.min}>Existencia minima: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value=\"2\" id={id.min} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ItemProductoLT;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ItemProducto from './itemProductos';\r\nimport ItemProductoLT from './itemProductLT';\r\nimport numeral from 'numeral';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Pagination from '../ventas/Pagination';\r\n\r\nconst ListaProd = ({ items, random }) => {\r\n    const [valor, setValor] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const invTotal = numeral(random.cantP).format(0, 0);\r\n    const precioInv = numeral(random.inv).format(0, 0);\r\n\r\n    const [codArrow, setCodArrow] = useState(false);\r\n    const [nombreArrow, setNombreArrow] = useState(false);\r\n    const [costoArrow, setCostoArrow] = useState(false);\r\n    const [precioArrow, setPrecioArrow] = useState(false);\r\n    const [existArrow, setExistArrow] = useState(false);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = valor.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            console.log(invTotal + \"jdsfkd \" + precioInv);\r\n            const cantEle = Math.floor(random.cantP / 20);\r\n            const extra = random.cantP - (cantEle * 20);\r\n            console.log(cantEle + \" extra: \" + extra);\r\n            const elem = [];\r\n            for(let i=0; i<items.length; i++){\r\n                console.log(items[i].price);\r\n                if (i <= extra) {\r\n                    /*\r\n                    \"imgUrl\": \"https://image.shutterstock.com/z/stock-photo-pair-of-white-sneakers-isolated-on-white-background-sport-shoes-712448377.jpg\",\r\n    \"name\": \"Sport Shoes\",\r\n    \"price\": 110\r\n                     */\r\n                    let id = \"ID \" + i;\r\n                    let title = items[i].name;\r\n                    let cod = Math.round(Math.random() * (2500000) + 500000);\r\n                    let price = items[i].price * 1000;\r\n                    let costo = (items[i].price * 10) * 81;\r\n                    let cant = (cantEle + 1);\r\n                    let category = items[i].name;\r\n                    let image = items[i].imgUrl;\r\n                    let ite = {\r\n                        'id': id,\r\n                        'cod': 'A0' + cod,\r\n                        'title': title,\r\n                        'price': price,\r\n                        'costo': costo,\r\n                        'cant': cant,\r\n                        'category': category,\r\n                        'min': 2,\r\n                        'image': image\r\n                    };\r\n                    elem.push(ite);\r\n                }\r\n                else {\r\n                    let id2 = items[i].id;\r\n                    let title2 = items[i].name;\r\n                    let cod2 = Math.round(Math.random() * (2500000) + 500000);\r\n                    let price2 = items[i].price * 1000;\r\n                    let costo2 = (items[i].price * 10) * 81;\r\n                    let cant2 = cantEle;\r\n                    let category2 = items[i].name;\r\n                    let image2 = items[i].imgUrl;\r\n                    let ite2 = {\r\n                        'id': id2,\r\n                        'cod': 'A0' + cod2,\r\n                        'title': title2,\r\n                        'price': price2,\r\n                        'costo': costo2,\r\n                        'cant': cant2,\r\n                        'category': category2,\r\n                        'min': 3,\r\n                        'image': image2\r\n                    };\r\n                    elem.push(ite2);\r\n                }\r\n            };\r\n            setValor(elem);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, []);\r\n\r\n    const compareCod = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.cod;\r\n        const cantB = b.cod;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareName = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.title;\r\n        const cantB = b.title;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareCosto = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.costo;\r\n        const cantB = b.costo;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareCant = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.cant;\r\n        const cantB = b.cant;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const comparePrecio = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.price;\r\n        const cantB = b.price;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n    const handleClick = (i) => {\r\n        switch (i) {\r\n            //Cod\r\n            case 0:\r\n                let cod = valor.sort(compareCod);\r\n                if(codArrow){\r\n                    setValor(cod.reverse());\r\n                }\r\n                else{\r\n                    setValor(cod);\r\n                }\r\n                setCodArrow(!codArrow);\r\n                setNombreArrow(false);\r\n                setCostoArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(false);\r\n                break;\r\n            //Nombre\r\n            case 1:\r\n                let name = valor.sort(compareName);\r\n                if(nombreArrow){\r\n                    setValor(name.reverse());\r\n                }\r\n                else{\r\n                    setValor(name);\r\n                }\r\n                setCodArrow(false);\r\n                setCostoArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(false);\r\n                setNombreArrow(!nombreArrow);\r\n                break;\r\n            //Costo\r\n            case 2:\r\n                let costo = valor.sort(compareCosto);\r\n                if(costoArrow){\r\n                    setValor(costo.reverse());\r\n                }\r\n                else{\r\n                    setValor(costo);\r\n                }\r\n                setCodArrow(false);\r\n                setNombreArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(false);\r\n                setCostoArrow(!costoArrow);\r\n                break;\r\n            //Precio\r\n            case 3:\r\n                let precio = valor.sort(comparePrecio);\r\n                if(precioArrow){\r\n                    setValor(precio.reverse());\r\n                }\r\n                else{\r\n                    setValor(precio);\r\n                }\r\n                setCodArrow(false);\r\n                setNombreArrow(false);\r\n                setCostoArrow(false);\r\n                setExistArrow(false);\r\n                setPrecioArrow(!precioArrow);\r\n                break;\r\n            //Existencia\r\n            case 4:\r\n                let exist = valor.sort(compareCant);\r\n                if(existArrow){\r\n                    setValor(exist.reverse());\r\n                }\r\n                else{\r\n                    setValor(exist);\r\n                }\r\n                setCodArrow(false);\r\n                setNombreArrow(false);\r\n                setCostoArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(!existArrow);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-bordered bgTable\" style={{ alignContent: \"center\" }}>\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\"></th>\r\n                        <th className=\"listE\" onClick={() => handleClick(0)}>Cod{codArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(2)}>Costo{costoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(3)}>Precio{precioArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(4)}>Inv.{existArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentPosts.map(val => (\r\n                        <ItemProducto key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n                <tfoot >\r\n                    <tr className=\"fooT\">\r\n                        <td className=\"centrada\" colSpan=\"4\" style={{ fontWeight: \"bold\" }}>Total inventario</td>\r\n                        <td className=\"centrada\">${precioInv}</td>\r\n                        <td className=\"centrada\">{invTotal}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n            <table className=\"table table-bordered ltTable\">\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\" onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(3)}>Precio{precioArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(4)}>Inv.{existArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentPosts.map(val => (\r\n                        <ItemProductoLT key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n                <tfoot >\r\n                    <tr className=\"fooT\">\r\n                        <td className=\"centrada\" colSpan=\"2\" style={{ fontWeight: \"bold\" }}>Total inventario</td>\r\n                        <td className=\"centrada\">${precioInv}</td>\r\n                        <td className=\"centrada\">{invTotal}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            {valor.length > 10 ?\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={valor.length}\r\n                    paginate={paginate}\r\n                    nextPage={nextPage}\r\n                    prevPage={prevPage}\r\n                    currentPage={currentPage}\r\n                /> : <></>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ListaProd;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ListaProd from './ListaProd';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst Productos = ({ random }) => {\r\n    const [item, setItem] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data[0]);\r\n                let a = result.data;\r\n                let res = (a).concat(a);\r\n                res.push(a[0]);\r\n                res.push(a[1]);\r\n                setItem(res);\r\n                console.log(res.length + \" fkdslkdsf\");\r\n                setLoad(true)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    if (Load) {\r\n        return (\r\n            <div className=\"table-responsive-sm prod\">\r\n                <h4 className=\"titulo\">Inventario:</h4>\r\n                <ListaProd items={item} random={random} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Productos;","import React from 'react';\r\n\r\nconst ItemProducto = ({ item }) => {\r\n    return (\r\n        \r\n            <tr id={item.id}>\r\n                <td className=\"centrada\"><img className=\"\" src={item.image} style={{ height: '40px', alignSelf:\"center\"}}></img></td>\r\n                <td className=\"justi\" >{item.cod}</td> \r\n                <td className=\"justi\" >{item.title}</td> \r\n                <td className=\"centrada\">${item.costo}</td>\r\n                <td className=\"centrada\">${item.price}</td>\r\n                <td className=\"centrada\">{item.cant}</td>\r\n                <td className=\"centrada\">2</td>\r\n            </tr>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ItemProducto;\r\n\r\n/*\r\n  'id': id,\r\n                        'cod': 'A0' + cod,\r\n                        'title': title,\r\n                        'price': price,\r\n                        'costo': costo,\r\n                        'cant': cant,\r\n                        'category': category,\r\n                        'min': 2,\r\n                        'image': image\r\n<th className=\"listE\"></th>\r\n                        <th className=\"listE\">Cod</th>\r\n                        <th className=\"listE\">Nombre</th>\r\n                        <th className=\"listE\">Costo</th>\r\n                        <th className=\"listE\">Precio</th>\r\n                        <th className=\"listE\">Existencias</th>\r\n                        <th className=\"listE\">Inv. min</th> */","import React from 'react';\r\n\r\nconst ItemProductoLT = ({ item }) => {\r\n    return (\r\n        \r\n            <tr id={item.id}>\r\n                <td className=\"centrada\">{item.cod}</td>\r\n                <td className=\"justi\" >{item.title}</td> \r\n                <td className=\"centrada\">${item.price}</td>\r\n                <td className=\"centrada\">{item.cant}</td>\r\n               \r\n            </tr>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ItemProductoLT;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ItemProducto from './itemProductosBI';\r\nimport ItemProductoLT from './itemProductLTBI';\r\nimport numeral from 'numeral';\r\nimport Pagination from '../ventas/Pagination';\r\n\r\nconst ListaProd = ({ items, random }) => {\r\n    const [valor, setValor] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const elem = [];\r\n            items.forEach(element => {\r\n                console.log(element.price);\r\n                    let id = element.id;\r\n                    let title = element.name;\r\n                    let cod = Math.round(Math.random() * (2500000) + 500000);\r\n                    let price = numeral(element.price * 1000).format(0, 0);\r\n                    let costo = numeral((element.price * 10) * 81).format(0, 0);\r\n                    let category = element.name;\r\n                    let image = element.imgUrl;\r\n                    let ite = {\r\n                        'id': id,\r\n                        'cod': 'A0' + cod,\r\n                        'title': title,\r\n                        'price': price,\r\n                        'costo': costo,\r\n                        'cant': 1,\r\n                        'category': category,\r\n                        'min': 2,\r\n                        'image': image\r\n                    };\r\n                    elem.push(ite);                \r\n            });\r\n            setValor(elem);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, []);\r\n\r\n   \r\n    return (\r\n        <>\r\n            <table className=\"table table-bordered bgTable\" style={{alignContent:\"center\"}}>\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\"></th>\r\n                        <th className=\"listE\">Cod</th>\r\n                        <th className=\"listE\">Nombre</th>\r\n                        <th className=\"listE\">Costo</th>\r\n                        <th className=\"listE\">Precio</th>\r\n                        <th className=\"listE\">Existencias</th>\r\n                        <th className=\"listE\">Inv. min</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {valor.map(val => (\r\n                        <ItemProducto key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"table table-bordered ltTable\">\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\">Cod</th>\r\n                        <th className=\"listE\">Nombre</th>\r\n                        <th className=\"listE\">Precio</th>\r\n                        <th className=\"listE\">Existencias</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {valor.map(val => (\r\n                        <ItemProductoLT key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ListaProd;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ListaProd from './ListaProdBI';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst ProductosBI = ({ random }) => {\r\n    const [item, setItem] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data[0]);\r\n                let res = [];\r\n                res.push(result.data[0]);\r\n                res.push(result.data[1]);\r\n                res.push(result.data[2]);\r\n                res.push(result.data[3]);\r\n                res.push(result.data[4]);\r\n                setItem(res);\r\n                setLoad(true)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    if (Load) {\r\n        return (\r\n            <div className=\"table-responsive-sm prod\">\r\n                <h4 className=\"titulo\">Productos con bajo stock:</h4>\r\n                <ListaProd items={item} random={random} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductosBI;","import React, { useRef } from 'react';\r\nimport './Consrtruccion.css';\r\n\r\nconst Construccion = () => {\r\n    const torch = useRef();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"contenedor loading\" style={{overflow:\"hidden\"}}>\r\n                <h1 className=\"errorTitulo mb-5\">No disponible</h1>\r\n                <h5 className=\"errorDescripcion\">Lo lamento, esta secci√≥n no esta presente en la versi√≥n de prueba <b>:(</b></h5>\r\n                <div className=\"gears\">\r\n                    <div className=\"gear one\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                    <div className=\"gear two\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                    <div className=\"gear three\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Construccion;","import React, { useState, useEffect, useRef } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport product from '../product.png';\r\nimport Modal from 'react-modal';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Productos from './Productos';\r\nimport ProductosBI from '../bajoInventario/ProductosBI';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nModal.setAppElement('#root');\r\nconst ProdBase = ({ random }) => {\r\n    const [item, setItem] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [texto, setTexto] = useState('');\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const matches630 = useMediaQuery('(min-width: 560px)');\r\n\r\n    /* {\"id\":1,\r\n    \"title\":\"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\",\r\n    \"price\":109.95,\r\n    \"description\":\"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n    \"category\":\"men clothing\",\r\n    \"image\":\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"} */\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data[0]);\r\n                let a = result.data;\r\n                let res = (a).concat(a);\r\n                res.push(a[0]);\r\n                res.push(a[1]);\r\n                setItem(res);\r\n                setLoad(true)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    /*  var i = 0;\r\n     var txt = \"P√°gina en construcci√≥n\";\r\n     var speed = 50; \r\n \r\n     function typeWriter() {\r\n         if (i < txt.length) {\r\n             const taskNode = taskContent.current;\r\n             taskNode.innerHTML += txt.charAt(i);\r\n             i++;\r\n             setTimeout(typeWriter, speed);\r\n         }\r\n     }\r\n  */\r\n    const handleClick = (a) => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n\r\n        setTexto(a);\r\n    };\r\n\r\n    const handleClick2 = (a) => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n        setTexto(a);\r\n        /* const taskNode = taskContent.current;\r\n        taskNode.innerHTML = '';\r\n        setTimeout(typeWriter, speed); */\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            maxHeight: \"800px\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    if (Load) {\r\n        return (\r\n            <>\r\n                <div className=\"contenedor \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-1 newProd\">\r\n                            <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 \">\r\n                            <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                                <button className=\"btn btn-primary\" onClick={() => handleClick('No implementado en la version de prueba')} ><SearchIcon /> </button>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                            </div>\r\n                        </div>\r\n                        <Snackbar open={open}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleClose(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                                {texto}\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#Inventario\">Inventario</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#bajo\">Bajo stock</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\" onClick={() => handleClick2('No implementado en la version de prueba')}>Movimientos de inventario</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\" onClick={() => handleClick2('No implementado en la version de prueba')}>Kardex</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content\">\r\n                        <div id=\"Inventario\" className=\"container tab-pane active\"><br />\r\n                            <Productos random={random} />\r\n                        </div>\r\n                        <div id=\"bajo\" className=\"container tab-pane fade\"><br />\r\n                            <ProductosBI random={random} />\r\n                        </div>\r\n                        <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                            <Construccion />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3`}>\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T mt-4 ml-5\">A√±adir Producto</h2>\r\n                        </header>\r\n                        <main> <div className=\"row \">\r\n                            {matches630 ?\r\n                                 <div className=\"col-sm-4 mt-3\">\r\n                                <img className=\"imagen\" src={product}></img>\r\n                            </div> \r\n                            : \r\n                            <div></div>}\r\n                            <div className=\"col-sm-8 mt-3\">\r\n                                <div className=\"row texto ml-2\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"code\">Codigo: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"code\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"name\">Producto: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"descripcion\">descripcion: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"descripcion\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"prov\">Proveedor: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"prov\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"costoC\">Costo compra: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"costoC\" min=\"0\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"costoV\">Valor venta: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"costoV\" min=\"0\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <input type=\"file\" className=\"form-control-file border\" name=\"file\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => handleClick('No implementado en la version de prueba')}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdBase;","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport numeral from 'numeral';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst CompraItem = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    const [Neto, setNeto] = useState(0);\r\n    const [IVA, setIVA] = useState(0);\r\n    const [t, setT] = useState(0);\r\n    const matches = useMediaQuery('(min-width:750px)');\r\n    \r\n      useEffect(() => {\r\n          setid({\r\n              id: item.numero,\r\n              e: item.numero + \" e\",\r\n              f: item.numero + \" f\",\r\n              t: item.numero + \" t\",\r\n              p: item.numero + \"p\",\r\n              total: \"$\" + numeral(item.total).format(0, 0)\r\n          });\r\n          setTotal1(numeral(item.prod1Price * item.prod1Cant).format(0, 0));\r\n        setTotal2(numeral(item.prod2Price * item.prod2Cant).format(0, 0));\r\n        let iba = ((19 * item.total) / 100);\r\n        setIVA(numeral(iba).format(0, 0));\r\n        setNeto(numeral(item.total - iba).format(0, 0));\r\n        setT(numeral(item.total).format(0, 0))\r\n      }, []);\r\n\r\n      const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n   \r\n  \r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${Neto}</td>\r\n                <td>${IVA}</td>\r\n                <td>${item.total}</td>\r\n                <td className=\"center\">\r\n                    <button type=\"button\" className=\"btn btn-primary p-1\" onClick={() => setModalIsOpen(true)}>\r\n                            <VisibilityIcon fontSize=\"small\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Detalle Compra</h2>\r\n                    </header>\r\n                    <main>\r\n                    <div className=\"row texto ml-5\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>Numero de compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Proveedor: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={id.total} id={id.t} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Precio unitario</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">${item.prod1Price}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">${item.prod2Price}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompraItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport numeral from 'numeral';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nModal.setAppElement('#root');\r\nconst CompraItemSmall = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    const [Neto, setNeto] = useState(0);\r\n    const [IVA, setIVA] = useState(0);\r\n    const [t, setT] = useState(0);\r\n    const matches = useMediaQuery('(min-width:750px)');\r\n    \r\n      useEffect(() => {\r\n          setid({\r\n              id: item.numero,\r\n              e: item.numero + \" e\",\r\n              f: item.numero + \" f\",\r\n              t: item.numero + \" t\",\r\n              p: item.numero + \"p\",\r\n              total: \"$\" + numeral(item.total).format(0, 0)\r\n          });\r\n          setTotal1(numeral(item.prod1Price * item.prod1Cant).format(0, 0));\r\n        setTotal2(numeral(item.prod2Price * item.prod2Cant).format(0, 0));\r\n        let iba = ((19 * item.total) / 100);\r\n        setIVA(numeral(iba).format(0, 0));\r\n        setNeto(numeral(item.total - iba).format(0, 0));\r\n        setT(numeral(item.total).format(0, 0))\r\n      }, []);\r\n\r\n      const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n   \r\n  \r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${item.total}</td>\r\n                <td className=\"center\">\r\n                    <button type=\"button\" className=\"btn btn-primary p-1\" onClick={() => setModalIsOpen(true)}>\r\n                            <VisibilityIcon fontSize=\"small\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Detalle Compra</h2>\r\n                    </header>\r\n                    <main>\r\n                    <div className=\"row texto ml-5\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>Numero de compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Proveedor: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={id.total} id={id.t} readonly style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Precio unitario</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">${item.prod1Price}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">${item.prod2Price}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompraItemSmall;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CompraItem from './compraItem';\r\nimport CompraItemSmall from './CompraItemSmall';\r\nimport Pagination from '../ventas/Pagination';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst ComprasList = ({ random }) => {\r\n\r\n    const [Load, setLoad] = useState(false);\r\n    const [item, setItem] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const matches630 = useMediaQuery('(min-width:630px)');\r\n\r\n    const dias = (a) => {\r\n        if (a == 0 || a == 2 || a == 4 || a == 6 || a == 7 || a == 9 || a == 11) {\r\n            return 30;\r\n        }\r\n        else if (a == 1) {\r\n            return 27;\r\n        }\r\n        else {\r\n            return 29;\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data);\r\n                let a = result.data;\r\n                let elemento = (a).concat(a);\r\n                elemento.push(a[0]);\r\n                elemento.push(a[1]);\r\n\r\n                const today = new Date(Date.now());\r\n                const cantB = Math.round(Math.random() * (90) + random.cantB);\r\n                const boletaMes = Math.round(cantB / (today.getMonth() + 1));\r\n                const elem = [];\r\n                console.log(\"Elementos: \" + random.cantB + \" \" + today.getMonth() + \" \" + cantB + \" \" + boletaMes);\r\n                for (let j = 0; j <= today.getMonth(); j++) {\r\n                    const mes = dias(j);\r\n                    for (let i = 0; i < boletaMes; i++) {\r\n                        const nc = Math.round(Math.random() * (12000) + 1000);\r\n                        const n = Math.round(Math.random() * (90000) + nc);\r\n                        const dias = Math.round(Math.random() * (mes) + 1);\r\n                        const id1 = Math.round(Math.random() * (19) + 0);\r\n                        let id2 = Math.round(Math.random() * (19) + 0);\r\n                        const a = Math.round(Math.random() * (25) + 0);\r\n                        let num = String.fromCharCode(65 + a);\r\n                        if (id1 == id2) {\r\n                            id2 = id2 + 1;\r\n                        }\r\n                        const mesA = j + 1;\r\n                        const cant1 = Math.round(Math.random() * (20) + 1);\r\n                        const cant2 = Math.round(Math.random() * (20) + 1);\r\n                        const total = (elemento[id1].price * cant1 * 1000 + elemento[id2].price * cant2 * 1000);\r\n                        let el = {\r\n                            'key': n,\r\n                            'numero': nc,\r\n                            'fecha': dias + \"/\" + mesA + \"/\" + today.getFullYear(),\r\n                            'prov': \"Empresa \" + num,\r\n                            'total': total,\r\n                            'prod1': elemento[id1].name,\r\n                            'prod1Price': elemento[id1].price * 1000,\r\n                            'prod1Cant': cant1,\r\n                            'prod2': elemento[id2].name,\r\n                            'prod2Price': elemento[id2].price * 1000,\r\n                            'prod2Cant': cant2,\r\n\r\n                        };\r\n                        elem.push(el);\r\n                    }\r\n                }\r\n                setItem(elem);\r\n                console.log(elem.length);\r\n                setLoad(true);\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = item.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n\r\n    return (\r\n        <>\r\n            {Load ?\r\n                <>\r\n                    <table className=\"table text-white\">\r\n                        <thead>\r\n                            {matches630 ?\r\n                                <tr>\r\n                                    <th>N¬∞ Compra</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Neto</th>\r\n                                    <th>Iva</th>\r\n                                    <th>Total</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                                :\r\n                                <tr>\r\n                                    <th>N¬∞</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Total</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                            }\r\n                        </thead>\r\n                        {matches630 ?\r\n                        <tbody>\r\n                            {currentPosts.map(item => (\r\n                                <CompraItem key={item.key} item={item} />\r\n                            ))}\r\n                        </tbody>\r\n                        :\r\n                        <tbody>\r\n                            {currentPosts.map(item => (\r\n                                <CompraItemSmall key={item.key} item={item} />\r\n                            ))}\r\n                        </tbody>\r\n                    }\r\n                    </table>\r\n                    <Pagination\r\n                        postsPerPage={postsPerPage}\r\n                        totalPosts={item.length}\r\n                        paginate={paginate}\r\n                        nextPage={nextPage}\r\n                        prevPage={prevPage}\r\n                        currentPage={currentPage}\r\n                    />\r\n                </>\r\n                :\r\n                <div className=\"contenedor center\" >\r\n                    <CircularProgress />\r\n                </div>}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ComprasList;","import React, { useState, useEffect } from 'react';\r\n\r\nimport ComprasList from './comprasList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nconst Compra = ({ random }) => {\r\n    const [Load, setLoad] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const matches = useMediaQuery('(min-width:990px)');\r\n\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"contenedor \">\r\n            <div className=\"row\">\r\n                <div className={`${matches ? 'col-lg-6' : ' col-lg-12'}  mt-1 `}>\r\n                    <div className=\"input-group mb-3 inputBuscar bt\" >\r\n                        <button className=\"btn btn-info\" ><SearchIcon onClick={() => handleClick()} /> </button>\r\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Buscar por n¬∞ factura\" min=\"0\" ></input>\r\n                    </div>\r\n                </div>\r\n                <div className={`${matches ? 'col-lg-6' : ' col-lg-12'} `}>\r\n                    <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                        <button className=\"btn btn-primary\"><SearchIcon onClick={() => handleClick()} /> </button>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por proveedor\" ></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n            </Snackbar>\r\n            <div className=\"table-responsive-md tabla  cardHome\">\r\n                <h4 className=\"titulo \">Compras 2021:</h4>\r\n                <ComprasList random={random} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Compra;","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport numeral from 'numeral';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst VentaItem = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    const [Neto, setNeto] = useState(0);\r\n    const [IVA, setIVA] = useState(0);\r\n    const [t, setT] = useState(0);\r\n    const matches = useMediaQuery('(min-width:750px)');\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.numero,\r\n            e: item.numero + \" e\",\r\n            f: item.numero + \" f\",\r\n            t: item.numero + \" t\",\r\n            p: item.numero + \"p\",\r\n            total: \"$\" + numeral(item.total).format(0, 0)\r\n        });\r\n        setTotal1(numeral(item.prod1Price * item.prod1Cant).format(0, 0));\r\n        setTotal2(numeral(item.prod2Price * item.prod2Cant).format(0, 0));\r\n        let iba = ((19 * item.total) / 100);\r\n        setIVA(numeral(iba).format(0, 0));\r\n        setNeto(numeral(item.total - iba).format(0, 0));\r\n        setT(numeral(item.total).format(0, 0))\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${Neto}</td>\r\n                <td>${IVA}</td>\r\n                <td>${t}</td>\r\n                <td className=\"center\">\r\n                    <button type=\"button\" className=\"btn btn-primary p-1\" onClick={() => setModalIsOpen(true)}>\r\n                            <VisibilityIcon fontSize=\"small\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-4\">Detalle Venta</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-4\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>Numero de boleta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Cliente: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total venta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={id.total} id={id.t} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Precio unitario</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">${item.prod1Price}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">${item.prod2Price}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VentaItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport numeral from 'numeral';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst VentaItemSmall = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    const [Neto, setNeto] = useState(0);\r\n    const [IVA, setIVA] = useState(0);\r\n    const [t, setT] = useState(0);\r\n    const matches = useMediaQuery('(min-width:750px)');\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.numero,\r\n            e: item.numero + \" e\",\r\n            f: item.numero + \" f\",\r\n            t: item.numero + \" t\",\r\n            p: item.numero + \"p\",\r\n            total: \"$\" + numeral(item.total).format(0, 0)\r\n        });\r\n        setTotal1(numeral(item.prod1Price * item.prod1Cant).format(0, 0));\r\n        setTotal2(numeral(item.prod2Price * item.prod2Cant).format(0, 0));\r\n        let iba = ((19 * item.total) / 100);\r\n        setIVA(numeral(iba).format(0, 0));\r\n        setNeto(numeral(item.total - iba).format(0, 0));\r\n        setT(numeral(item.total).format(0, 0))\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${t}</td>\r\n                <td className=\"center\">\r\n                    <button type=\"button\" className=\"btn btn-primary p-1\" onClick={() => setModalIsOpen(true)}>\r\n                            <VisibilityIcon fontSize=\"small\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-4\">Detalle Venta</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-4\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>Numero de boleta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Cliente: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total venta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={id.total} id={id.t} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Precio unitario</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">${item.prod1Price}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">${item.prod2Price}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\", visibility:\"hidden\"}}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VentaItemSmall;\r\n","import Pagination from './Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport VentaItem from './VentaItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport VentaItemSmall from './VentaItemSmall';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst VentaList = ({ rand, clientes }) => {\r\n    const random = rand;\r\n    const cliente = clientes;\r\n    const [itemC, setItemC] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const matches630 = useMediaQuery('(min-width:630px)');\r\n\r\n\r\n\r\n    const dias = (a) => {\r\n        if (a === 0 || a === 2 || a === 4 || a === 6 || a === 7 || a === 9 || a === 11) {\r\n            return 30;\r\n        }\r\n        else if (a === 1) {\r\n            return 27;\r\n        }\r\n        else {\r\n            return 29;\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data);\r\n                let listaElementos = result.data;\r\n                let res = (listaElementos).concat(listaElementos);\r\n                res.push(listaElementos[0]);\r\n                res.push(listaElementos[1]);\r\n\r\n                const today = new Date(Date.now());\r\n                const cantB = Math.round(Math.random() * (90) + random.cantB);\r\n                const boletaMes = Math.round(cantB / (today.getMonth() + 1));\r\n                const elem = [];\r\n                let idGroup = 0;\r\n                console.log(cliente[0]);\r\n                console.log(\"Elementos: \" + random.cantB + \" \" + today.getMonth() + \" \" + cantB + \" \" + boletaMes);\r\n                for (let j = 0; j <= today.getMonth(); j++) {\r\n                    const mes = dias(j);\r\n                    for (let i = 0; i < boletaMes; i++) {\r\n                        if (i % 10 == 0) {\r\n                            idGroup = idGroup++;\r\n                        }\r\n                        const nc = Math.round(Math.random() * (12000) + 1000);\r\n                        const n = Math.round(Math.random() * (90000) + nc);\r\n                        const dias = Math.round(Math.random() * (mes) + 1);\r\n                        const id1 = Math.round(Math.random() * (19) + 0);\r\n                        let id2 = Math.round(Math.random() * (19) + 0);\r\n                        const a = Math.round(Math.random() * (4) + 0);\r\n                        const cli = cliente[a].name.first + \" \" + cliente[a].name.last;\r\n\r\n                        if (id1 === id2) {\r\n                            id2 = id2 + 1;\r\n                        }\r\n                        const mesA = j + 1;\r\n                        const cant1 = Math.round(Math.random() * (10) + 1);\r\n                        const cant2 = Math.round(Math.random() * (10) + 1);\r\n                        const total = res[id1].price * cant1 * 1000 + res[id2].price * cant2 * 1000;\r\n                        let el = {\r\n                            idGroup: idGroup,\r\n                            'key': n,\r\n                            'numero': nc,\r\n                            'fecha': dias + \"/\" + mesA + \"/\" + today.getFullYear(),\r\n                            'prov': cli,\r\n                            'total': total,\r\n                            'prod1': res[id1].name,\r\n                            'prod1Price': res[id1].price * 1000,\r\n                            'prod1Cant': cant1,\r\n                            'prod2': res[id2].name,\r\n                            'prod2Price': res[id2].price * 10000,\r\n                            'prod2Cant': cant2,\r\n\r\n                        };\r\n                        elem.push(el);\r\n                    }\r\n                }\r\n                const pag = Math.ceil(cantB / 10);\r\n                const a = [];\r\n                for (let i = 0; i < pag; i++) {\r\n                    let j = i + 1;\r\n                    let c = {\r\n                        id: j,\r\n                        name: pag + j\r\n                    }\r\n                    a.push(c);\r\n                }\r\n                setItemC(elem);\r\n                setLoad(true);\r\n\r\n                console.log(elem.length);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = itemC.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {Load ?\r\n                <>\r\n                    <table className=\"table text-white\" style={{ width: \"90%\", marginLeft: \"5%\" }}>\r\n                        <thead style={{ fontSize: \"14px\" }}>\r\n                            {matches630 ?\r\n                                <tr>\r\n                                    <th>N¬∞ Boleta</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Venta neta</th>\r\n                                    <th>IVA</th>\r\n                                    <th>Total</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                                :\r\n                                <tr>\r\n                                    <th>Bol</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Total</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                            }\r\n                        </thead>\r\n                        {matches630 ?\r\n                        <tbody>\r\n                            {currentPosts.map(item => (\r\n                                <VentaItem key={item.key} item={item} />\r\n                            ))}\r\n                        </tbody>\r\n                        :\r\n                        <tbody>\r\n                            {currentPosts.map(item => (\r\n                                <VentaItemSmall key={item.key} item={item} />\r\n                            ))}\r\n                        </tbody>\r\n                        }\r\n                    </table>\r\n                    <Pagination\r\n                        postsPerPage={postsPerPage}\r\n                        totalPosts={itemC.length}\r\n                        paginate={paginate}\r\n                        nextPage={nextPage}\r\n                        prevPage={prevPage}\r\n                        currentPage={currentPage}\r\n                    />\r\n                </>\r\n                :\r\n                <div className=\"contenedor center\" >\r\n                    <CircularProgress />\r\n                </div>}\r\n\r\n        </>\r\n\r\n    );\r\n}\r\nexport default VentaList;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport VentaList from './VentaList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Venta = ({ random }) => {\r\n    const [loading, setloading] = useState(false);\r\n    const [cliente, setCliente] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const matches = useMediaQuery('(min-width:990px)');\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=5`\r\n                );\r\n                console.log(result.data.results);\r\n                setCliente(result.data.results);\r\n                setloading(true);\r\n                console.log(loading);\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"contenedor\">\r\n                <div className=\"row\">\r\n                    <div className={`${matches ? 'col-lg-6' : ' col-lg-12'}  mt-1 `}>\r\n                        <div className=\"input-group mb-3 inputBuscar bt\" >\r\n                            <button className=\"btn btn-info\" ><SearchIcon onClick={() => handleClick()} /> </button>\r\n                            <input type=\"number\" className=\"form-control\" placeholder=\"Buscar por n¬∞ boleta\" min=\"0\" ></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${matches ? 'col-lg-6' : ' col-lg-12'} `}>\r\n                        <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                            <button className=\"btn btn-primary\"><SearchIcon onClick={() => handleClick()} /> </button>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-responsive-md tabla \">\r\n                    <h4 className=\"titulo\">Ventas 2021:</h4>\r\n                        <VentaList rand={random} clientes={cliente} />\r\n                </div>\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Venta;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ItemVenta = ({ item }) => {\r\n    return (\r\n            <tr id={item.id} >\r\n                <td style={{fontWeight: 'bold'}} >{item.title}</td>\r\n                <td style={{fontWeight: 'bold'}}>${item.cant}</td>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default ItemVenta;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ItemVenta from './ReporteItemVenta';\r\n\r\nconst ReporteVentaLista = ({ item }) => {\r\n    console.log(item.id);\r\n\r\n    return (\r\n        <div className=\"table-responsive-md listaReporte\" style={{background: \"rgb(39, 41, 61)\", overflowY:\"hidden\"}}>\r\n            <table className=\"table text-white table-bordered\">\r\n                <tbody>\r\n                    {item.map(item => (\r\n                        <ItemVenta key={item.id} item={item} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReporteVentaLista;","import React, { useState, useEffect } from 'react';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport numeral from 'numeral';\r\nimport ReporteVentaLista from './ReporteVentaLista';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport axios from 'axios';\r\nconst VG = () => {\r\n    const [data, setData] = useState({});\r\n    const [totalV, setTotalV] = useState(0);\r\n    const [totalG, setTotalG] = useState(0);\r\n    const [promVenta, setPromVenta] = useState(0);\r\n    const [margen, setMargen] = useState(0);\r\n    const matches = useMediaQuery('(min-width:500px)');\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n    const [ventasDia, setVentasDia] = useState([]);\r\n    const [item, setItem] = useState([]);\r\n    const [ventasProd, setVentasProd] = useState([]);\r\n    const [ventasCat, setVentasCat] = useState([]);\r\n    const [gananciasCat, setgananciasCat] = useState([]);\r\n    const [ventasCatGrap, setVentasCatGrap] = useState({});\r\n    const [gananciasCatGrap, setGananciasCatGrap] = useState({});\r\n\r\n    const options1 = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n            position: 'right',\r\n        },\r\n        height: \"400px\",\r\n        width: \"900px\",\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 5000000\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n    }\r\n    const options2 = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n            position: 'bottom',\r\n        },\r\n        height: \"400px\",\r\n        width: \"900px\",\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 5000000\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n    }\r\n\r\n    const optionsDonat = {\r\n        legend: {\r\n            display: true,\r\n            color: \"#ffffff\",\r\n            position: \"right\"\r\n        },\r\n    }\r\n    const optionsDonat2 = {\r\n        legend: {\r\n            display: false,\r\n        },\r\n    }\r\n    const cat = ['Bebidas', 'Snacks', 'Cigarros', 'Leches', 'Dulces', 'Congelados', 'Otros...'];\r\n    useEffect(() => {\r\n\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data);\r\n                let res = result.data;\r\n                let listaP = [];\r\n                for (let i = 0; i < 7; i++) {\r\n                    let c3 = Math.round(Math.random() * (2000000) + 1000000);\r\n                    console.log(\"prueba dentro del for: \" + res[i]);\r\n                    let c = {\r\n                        id: \"c\" + i,\r\n                        title: res[i].name,\r\n                        cant: numeral(c3).format(0, 0)\r\n                    }\r\n                    listaP.push(c);\r\n                }\r\n                setVentasProd(listaP);\r\n\r\n                const labels = ['dia 1', 'dia 2', 'dia 3', 'dia 4', 'dia 5', 'dia 6', 'dia 7'];\r\n                const datosVentas = [];\r\n                const datosGanancias = [];\r\n                let suma = 0;\r\n                let sumaG = 0;\r\n                for (let i = 0; i < 7; i++) {\r\n                    let a = Math.round(Math.random() * (3000000) + 2000000);\r\n                    let g = Math.round((a * 75) / 100);\r\n                    datosVentas.push(a);\r\n                    datosGanancias.push(g);\r\n                    suma = suma + a;\r\n                    sumaG = sumaG + g;\r\n                }\r\n                let p = Math.round(suma / 2158);\r\n                let m = Math.round((sumaG * 100) / suma);\r\n                setPromVenta(numeral(p).format(0, 0));\r\n                setMargen(numeral(m).format(0, 0));\r\n                setTotalG(numeral(sumaG).format(0, 0));\r\n                setTotalV(numeral(suma).format(0, 0));\r\n                const datitos = {\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Ventas',\r\n                            data: datosVentas,\r\n                            backgroundColor: 'rgb(255, 99, 132)',\r\n                        },\r\n                        {\r\n                            label: 'Ganancias',\r\n                            data: datosGanancias,\r\n                            backgroundColor: 'rgb(54, 162, 235)',\r\n                        },\r\n                    ],\r\n                }\r\n                let maxV = Math.round((suma / 7) - 900000);\r\n                let listaV = [];\r\n                let listaG = [];\r\n                let listaC = [];\r\n                let labelsVCat = [];\r\n                let dataVCat = [];\r\n                let labelsGCat = [];\r\n                let dataGCat = [];\r\n                let por = [50, 92];\r\n                for (let i = 0; i < 7; i++) {\r\n                    let a1 = Math.round(Math.random() * (maxV) + 900000);\r\n                    let b2 = Math.round(Math.random() * (2000000) + 1000000);\r\n                    let gh = i%2;\r\n                    let d4 = Math.round((b2 * por[gh]) / 100);\r\n                    let di = i + 1;\r\n                    let a = {\r\n                        id: \"a\" + i,\r\n                        title: \"dia \" + di,\r\n                        cant: numeral(a1).format(0, 0)\r\n                    }\r\n                    let b = {\r\n                        id: \"b\" + i,\r\n                        title: cat[i],\r\n                        cant: numeral(b2).format(0, 0)\r\n                    }\r\n\r\n                    let d = {\r\n                        id: \"d\" + i,\r\n                        title: cat[i],\r\n                        cant: numeral(d4).format(0, 0)\r\n                    }\r\n                    listaV.push(a);\r\n                    listaC.push(b);\r\n                    listaG.push(d);\r\n                    labelsVCat.push(b.title);\r\n                    dataVCat.push(b2);\r\n                    labelsGCat.push(d.title);\r\n                    dataGCat.push(d4);\r\n                }\r\n                setVentasDia(listaV);\r\n                setVentasCatGrap({\r\n                    labels: labelsVCat,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Venta por categoria',\r\n                            data: dataVCat,\r\n                            backgroundColor: [\r\n                                '#FF6384',\r\n                                '#9933ff',\r\n                                '#36A2EB',\r\n                                '#FFCE56',\r\n                                '#66ff33',\r\n                                '#ff6600',\r\n                                '#cc3399'\r\n                            ],\r\n                        }\r\n                    ]\r\n                });\r\n                setGananciasCatGrap({\r\n                    labels: labelsGCat,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Ganancias por categoria',\r\n                            data: dataGCat,\r\n                            backgroundColor: [\r\n                                '#FF6384',\r\n                                '#9933ff',\r\n                                '#36A2EB',\r\n                                '#FFCE56',\r\n                                '#66ff33',\r\n                                '#ff6600',\r\n                                '#cc3399'\r\n                            ],\r\n                        }\r\n                    ]\r\n                });\r\n                setVentasCat(listaC);\r\n                setgananciasCat(listaG);\r\n                setData(datitos);\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        };\r\n        fetchItems();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-lg-12 mt-4\" style={{ minHeight: \"300px\" }}>\r\n                    <Bar data={data}\r\n                        options={matches ? options1 : options2}\r\n                    />\r\n                </div>\r\n                <div className=\"container-fluid mt-3\">\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card w-45\" style={{ backgroundColor: \"rgb(39, 41, 61)\", border: \"1px solid rgb(255,255,255)\", borderRadius: \"25px\" }}>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"card-body\" style={{ padding: 0 }}>\r\n                                    <div className=\"media d-flex\">\r\n                                        <div className=\"align-self-center\">\r\n                                            <AccountBalanceIcon className=\"float-left\" style={{ fontSize: \"4rem\", paddingLeft: \"1.25rem\" }} />\r\n                                        </div>\r\n                                        <div className=\"media-body text-right\" style={{ padding: \"1.25rem\" }}>\r\n                                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas</h5>\r\n                                                Total: {totalV}<br />\r\n                                                Cantidad de ventas: 2,158 <br />\r\n                                                Ventas promedio: {promVenta}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"mr-5\"></span>\r\n                        <div className=\"card w-45\" style={{ backgroundColor: \"rgb(39, 41, 61)\", border: \"1px solid rgb(255,255,255)\", borderRadius: \"25px\" }}>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"card-body\" style={{ padding: 0 }}>\r\n                                    <div className=\"media d-flex\">\r\n                                        <div className=\"align-self-center\">\r\n                                            <LocalAtmIcon className=\"float-left\" style={{ fontSize: \"4.5rem\", paddingLeft: \"1.25rem\" }} />\r\n                                            <i ></i>\r\n                                        </div>\r\n                                        <div className=\"media-body text-right\" style={{ padding: \"1.25rem\" }}>\r\n                                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ganancias</h5>\r\n                                            <div style={{ verticalAlign: \"middle\" }}>\r\n                                                Total: {totalG}<br />\r\n                                                    margen de utilidad promedio: {margen}%<br /><br />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por dia en el periodo: </h5>\r\n                            <ReporteVentaLista item={ventasDia} />\r\n                        </div>\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por productos en el periodo: </h5>\r\n                            <ReporteVentaLista item={ventasProd} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por dia en el periodo: </h5>\r\n                            <ReporteVentaLista item={ventasCat} />\r\n                        </div>\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por productos en el periodo: </h5>\r\n                            <ReporteVentaLista item={gananciasCat} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{ marginBottom: \"3%\" }}>\r\n                        <div className=\"col-lg-5 mt-4 mr-0 pr-0\">\r\n                            <Doughnut data={ventasCatGrap}\r\n                                options={optionsDonat2} style={{ background: \"rgb(39, 41, 61);\" }} />\r\n                        </div>\r\n                        <div className=\"col-lg-2 mt-4 p-0\" style={{ textAlign: \"center\", alignSelf:\"center\"}}>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item listaColor\">\r\n                                    <div className=\"rectangle\" style={{background:\"#FF6384\"}}></div> <span>{cat[0]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#9933ff\"}}></div> <span>{cat[1]}</span></li>\r\n                                <li className=\"list-group-item listaColor\">  <div className=\"rectangle\" style={{background:\"#36A2EB\"}}></div> <span>{cat[2]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#FFCE56\"}}></div> <span>{cat[3]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#66ff33\"}}></div> <span>{cat[4]}</span></li>\r\n                                <li className=\"list-group-item listaColor\">  <div className=\"rectangle\" style={{background:\"#ff6600\"}}></div> <span>{cat[5]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#cc3399\"}}></div> <span>{cat[6]}</span></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-lg-5 mt-4 ml-0 pl-0\">\r\n                            <Doughnut data={gananciasCatGrap}\r\n                                options={optionsDonat2} style={{ background: \"rgb(39, 41, 61);\" }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VG;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from 'axios';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport VG from './VG';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Calendar, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteVenta = () => {\r\n    const matches = useMediaQuery('(min-heigh:500px)');\r\n\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n    const [desde, setDesde] = useState('');\r\n    const [hasta, setHasta] = useState('');\r\n\r\n    /*  let mesI = today.getMonth();\r\n        if (mesI < 10) {\r\n            mesI = \"0\" + mesI;\r\n        }\r\n        let mesF = today.getMonth() + 1;\r\n        if (mesF < 10) {\r\n            mesF = \"0\" + mesF;\r\n        }\r\n        let day = today.getDate();\r\n        if (today.getDate() < 10) {\r\n            day = \"0\" + today.getDate();\r\n        }\r\n        const fechaF = today.getFullYear() + \"-\" + mesF + \"-\" + day;\r\n        const fechaI = today.getFullYear() + \"-\" + mesI + \"-\" + day;\r\n        const options = {\r\n            legend: {\r\n                display: true,\r\n                color: \"#ffffff\"\r\n    \r\n            },\r\n        } \r\n    \r\n        function compare(a, b) {\r\n            // Use toUpperCase() to ignore character casing\r\n            const cantA = a.cant;\r\n            const cantB = b.cant;\r\n    \r\n            let comparison = 0;\r\n            if (cantA > cantB) {\r\n                comparison = -1;\r\n            } else if (cantA < cantB) {\r\n                comparison = 1;\r\n            }\r\n            return comparison;\r\n        }\r\n    \r\n        const color = ['#FF6384', '#9933ff', '#36A2EB', '#FFCE56', '#66ff33', '#ff6600', '#cc3399', '#ff99ff', '#dfbf9f', '#80ffff'];\r\n        useEffect(() => {\r\n    \r\n            const fetchItems = async () => {\r\n                try {\r\n                    const result = await axios(\r\n                        `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                    );\r\n                    console.log(result);\r\n                    let a = result.data;\r\n                    let res = (a).concat(a);\r\n                    res.push(a[0]);\r\n                    res.push(a[1]);\r\n                    setLoad(true);\r\n                    if (result.status === 200) {\r\n                        const datas = [];\r\n                        const value = [];\r\n                        const datasMenor = [];\r\n                        const valueMenor = [];\r\n                        const lab = [];\r\n                        const labMenor = [];\r\n                        for (let i = 0; i < 10; i++) {\r\n                            let valor = Math.round(Math.random() * (2500000) + 500000);\r\n                            let na = res[i].name;\r\n                            let naC = res[i].name.slice(0, 15) + '...';\r\n                            let menor = Math.round(Math.random() * (150000) + 10000);\r\n                            let j = i + 10;\r\n                            let nam = res[j].name;\r\n                            let cliente = {\r\n                                id: i,\r\n                                nombre: na,\r\n                                cant: valor,\r\n                                color: color[i]\r\n                            }\r\n                            let menos = {\r\n                                id: j,\r\n                                nombre: nam,\r\n                                cant: menor,\r\n                                color: color[i]\r\n                            }\r\n                            console.log(i);\r\n                            lab.push(naC);\r\n                            labMenor.push(nam);\r\n                            datas.push(valor);\r\n                            value.push(cliente);\r\n                            datasMenor.push(menor);\r\n                            valueMenor.push(menos);\r\n                        }\r\n                        const val = value.sort(compare);\r\n                        const va = valueMenor.sort(compare);\r\n                        setItem(val);\r\n                        setItemMenor(va);\r\n                        console.log(val);\r\n                        const dat = {\r\n                            labels: lab,\r\n                            datasets: [{\r\n                                data: datas,\r\n                                backgroundColor: [\r\n                                    '#FF6384',\r\n                                    '#9933ff',\r\n                                    '#36A2EB',\r\n                                    '#FFCE56',\r\n                                    '#66ff33',\r\n                                    '#ff6600',\r\n                                    '#cc3399',\r\n                                    '#ff99ff',\r\n                                    '#dfbf9f',\r\n                                    '#80ffff'\r\n                                ],\r\n    \r\n                            }],\r\n    \r\n                        };\r\n                        const datMenor = {\r\n                            labels: labMenor,\r\n                            datasets: [{\r\n                                data: datasMenor,\r\n                                backgroundColor: [\r\n                                    '#FF6384',\r\n                                    '#9933ff',\r\n                                    '#36A2EB',\r\n                                    '#FFCE56',\r\n                                    '#66ff33',\r\n                                    '#ff6600',\r\n                                    '#cc3399',\r\n                                    '#ff99ff',\r\n                                    '#dfbf9f',\r\n                                    '#80ffff'\r\n                                ],\r\n    \r\n                            }],\r\n    \r\n                        };\r\n                        setdata(dat);\r\n                        setdataMenor(datMenor);\r\n                        setLoading(true);\r\n                        console.log(dat.data)\r\n                    }\r\n    \r\n                } catch (error) {\r\n                    console.log(error);\r\n                    setError(true);\r\n    \r\n                }\r\n            }\r\n            fetchItems();\r\n        }, []); */\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI-1);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            let mon=month;\r\n            let mesIni = mI;\r\n            if(mesIni<10){\r\n                mesIni=\"0\"+mesIni;\r\n            }\r\n            if(mon<10){\r\n                mon=\"0\"+mon;\r\n            }\r\n            \r\n            setDesde(`${year}-${mesIni}-${dayI}`);\r\n            setHasta(`${year}-${mon}-0${day}`);\r\n            console.log(`${year}-${mesIni}-${dayI}`);\r\n            console.log(`${year}-${mon}-0${day}`);\r\n            setHasta()\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            let mon=month;\r\n            let da = d;\r\n            let dayH = day;\r\n            \r\n            if(mon<10){\r\n                mon=\"0\"+mon;\r\n            }\r\n            if(da<10){\r\n                da = \"0\"+da;\r\n            }\r\n            if(dayH<10){\r\n                dayH = \"0\"+dayH;\r\n            }\r\n\r\n            \r\n            setDesde(`${year}-${mon}-${da}`);\r\n            setHasta(`${year}-${mon}-${dayH}`);\r\n            console.log(`${year}-${mon}-${da}`);\r\n            console.log(`${year}-${mon}-${dayH}`);\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n\r\n    const onChange = (q) =>{\r\n        console.log(q);\r\n        setDesde(q);\r\n    }\r\n    const onChangeH = (q) =>{\r\n        console.log(q);\r\n        setHasta(q);\r\n    }\r\n\r\n    if (Loading && !error) {\r\n        return (\r\n            <div className=\"contenedor\">\r\n                <div className=\"row\">\r\n                    <h4 className=\"titulo\" style={{ paddingLeft: \"1%\" }}>Seleccione periodo para realizar reporte:</h4>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                    <DatePicker\r\n                                inputPlaceholder={range}\r\n                                value={selectedDayRange}\r\n                                onChange={setSelectedDayRange}\r\n                                maximumDate={utils().getToday()}\r\n                                inputClassName=\"fechasInput\"\r\n                            />\r\n                        {/* {matches ?\r\n                            <DatePicker\r\n                                inputPlaceholder={range}\r\n                                value={selectedDayRange}\r\n                                onChange={setSelectedDayRange}\r\n                                maximumDate={utils().getToday()}\r\n                                inputClassName=\"fechasInput\"\r\n                            />\r\n                            :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <label for=\"desde\">Desde: </label>\r\n                                    <input type=\"date\" id=\"desde\" name=\"desde\" value={desde} \r\n                                    onChange={(e) => setDesde(e.target.value)} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"></input>\r\n                                    </div>\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                <label for=\"hasta\">Hasta: </label>\r\n                                    <input type=\"date\" id=\"hasta\" name=\"hasta\" value={hasta} \r\n                                    onChange={(e) => setHasta(e.target.value)} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                        } */}\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"col-lg-6\" style={{ display: \"flex\", paddingBottom: \"5%\", height: \"90%\", paddingBottom: \"0\", marginTop: \"5%\" }}> */}\r\n\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n\r\n\r\n                <div style={{ width: \"90%\", marginLeft: \"5%\" }}>\r\n\r\n                    <VG />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    else {\r\n        if (error) {\r\n            return (\r\n                <div className=\"contenedor\"> Error</div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"contenedor center\" >\r\n                    <CircularProgress />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default ReporteVenta;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteProductos = () => {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"contenedor\">\r\n                <div className=\"row\">\r\n                    <h4 className=\"titulo\" style={{ paddingLeft: \"1%\" }}>Seleccione periodo para realizar reporte:</h4>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                        <DatePicker\r\n                            inputPlaceholder={range}\r\n                            value={selectedDayRange}\r\n                            onChange={setSelectedDayRange}\r\n                            maximumDate={utils().getToday()}\r\n                            inputClassName=\"fechasInput\"\r\n                        />\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Ventas por productos</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Ventas por categoria</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div id=\"#home\" className=\"container tab-pane active\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                    <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReporteProductos;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteCompra = () => {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"contenedor\">\r\n                <div className=\"row\">\r\n                    <h4 className=\"titulo\" style={{ paddingLeft: \"1%\" }}>Seleccione periodo para realizar reporte:</h4>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                        <DatePicker\r\n                            inputPlaceholder={range}\r\n                            value={selectedDayRange}\r\n                            onChange={setSelectedDayRange}\r\n                            maximumDate={utils().getToday()}\r\n                            inputClassName=\"fechasInput\"\r\n                        />\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Compras por productos</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Compras por categoria</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Compras por Proveedor</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content\">\r\n                    <div id=\"#home\" className=\"container tab-pane active\"><br />\r\n                            <Construccion />\r\n                        </div>\r\n                        <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                            <Construccion />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReporteCompra;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteCliente = () => {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"contenedor\">\r\n                <div className=\"row\">\r\n                    <h4 className=\"titulo\" style={{ paddingLeft: \"1%\" }}>Seleccione periodo para realizar reporte:</h4>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                        <DatePicker\r\n                            inputPlaceholder={range}\r\n                            value={selectedDayRange}\r\n                            onChange={setSelectedDayRange}\r\n                            maximumDate={utils().getToday()}\r\n                            inputClassName=\"fechasInput\"\r\n                        />\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Ventas por clientes</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Clientes con creditos activos</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div id=\"#home\" className=\"container tab-pane active\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                    <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    ¬°Alerta! Boton no implementado en la version de prueba\r\n                                                    </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReporteCliente;","import React from 'react';\r\nimport Home from \"./Home/Home\";\r\nimport ListaCliente from \"./cliente/ListaCliente\";\r\nimport Perfil from './perfil/Perfil';\r\nimport ProdBase from './productos/ProdBase';\r\nimport Compra from './compra/compra';\r\nimport Venta from './ventas/Venta';\r\nimport ReporteVenta from './reporteVenta/ReporteVenta';\r\nimport Construccion from './Construccion/Contruccion';\r\nimport ReporteProductos from './Reportes/ReporteProductos';\r\nimport ReporteCompra from './Reportes/ReporteCompra';\r\nimport ReporteCliente from './Reportes/ReporteCliente';\r\n\r\nconst Pages = ({ seleccion, random, item }) => {\r\n\r\n    switch (seleccion) {\r\n        case 'home':\r\n            return (\r\n                <Home elementos={random} item={item} />\r\n            );\r\n        case 'transacciones/ventas':\r\n            return (\r\n                <Venta random={random} />\r\n            );\r\n        case 'transacciones/compra':\r\n            return (\r\n                <Compra random={random} />\r\n            );\r\n\r\n        case 'contactos/prov':\r\n            return (\r\n                <ListaCliente query={random.cantProv} tipo='2' />\r\n            );\r\n        case 'contactos/cliente':\r\n            return (\r\n                <ListaCliente query={random.cantClient} tipo='1' />\r\n            );\r\n        case 'productos':\r\n            return (\r\n                <ProdBase random={random} />\r\n            );\r\n        case 'reportes/venta':\r\n            return (\r\n                <ReporteVenta />\r\n            );\r\n            case 'reportes/cliente':\r\n            return (\r\n                <ReporteCliente />\r\n            );\r\n            case 'reportes/productos':\r\n            return (\r\n                <ReporteProductos />\r\n            );\r\n            case 'reportes/compra':\r\n            return (\r\n                <ReporteCompra />\r\n            );\r\n        default:\r\n            return (\r\n                <Construccion />\r\n            );\r\n        case 'config/perfil':\r\n            return (\r\n                <Perfil item={item} tipo={false}/>\r\n            );\r\n        case 'contactos/trab':\r\n            return (\r\n                <ListaCliente query={random.cantT} tipo='3' />\r\n            );\r\n    }\r\n}\r\n\r\nexport default Pages;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { SettingsOverscanOutlined } from '@material-ui/icons';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport SideBar from '../SideBar';\r\nimport './Login.css';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nconst Login = () => {\r\n    const [item, setItem] = useState({});\r\n    const [load, setLoad] = useState(false);\r\n    const [mail, setMail] = useState(\"\");\r\n    const [psw, setPsw] = useState(\"\");\r\n    const [valor, setValor] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n    const [openE, setOpenE] = useState(false);\r\n\r\n    const onChangeP = (p) => {\r\n        setPsw(p);\r\n    }\r\n    const onChangeE = (m) => {\r\n        setMail(m);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=1`\r\n                );\r\n                console.log(result.data.results[0]);\r\n                setItem(result.data.results[0]);\r\n                setMail(result.data.results[0].email);\r\n                setPsw(result.data.results[0].login.password);\r\n                setLoad(true);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (m, p) => {\r\n        console.log(\"M: \" + m + \" P: \" + p);\r\n        if (item.email === m && item.login.password === p) {\r\n            setValor(2);\r\n\r\n        }\r\n        else if (m == '' || p == '') {\r\n            setValor(2);\r\n\r\n        }\r\n        else {\r\n            setOpenE(true);\r\n        }\r\n    }\r\n    if (load) {\r\n        switch (valor) {\r\n            case 0:\r\n                return (\r\n                    <>\r\n                        <div className=\"main-bg\">\r\n                            <div className=\"login-container text-c animated flipInX\">\r\n                                <div>\r\n                                    <h1 className=\"logo-badge text-whitesmoke\"><AccountCircleIcon style={{ fontSize: \"80px\" }} /></h1>\r\n                                </div>\r\n                                <h3 className=\"text-whitesmoke mb-4\">Inicio de sesi√≥n</h3>\r\n                                <div className=\"container-content\">\r\n                                    <form className=\"margin-t\">\r\n                                        <div className=\"form-group mb-4\">\r\n                                            <input placeholder={item.email} type=\"email\" className=\"form-control\" value={mail} onChange={(e) => onChangeE(e.target.value)} required />\r\n                                        </div>\r\n                                        <div className=\"form-group mb-4\">\r\n                                            <input placeholder={item.login.password} type=\"password\" className=\"form-control\" value={psw} onChange={(e) => onChangeP(e.target.value)} required />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"form-button button-l margin-b\" onClick={() => handleChange(mail, psw)}>Iniciar sesi√≥n</button><br />\r\n                                        <div style={{textAlign:'left'}}>\r\n                                            <a className=\"text-darkyellow\"><small>¬øOlvidaste tu contrase√±a?</small></a>\r\n                                            <p className=\"text-whitesmoke mb-0 mt-2\"><small>¬øNo tienes una cuenta?</small></p>\r\n                                            <a className=\"text-darkyellow mt-0 \" ><small>Registrate</small></a>\r\n                                            <div className=\"mt-2\" style={{textAlign:\"right\"}}>\r\n                                                <a className=\"text-darkyellow\"><small>¬øNecesitas ayuda?</small></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Snackbar open={open}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleClose(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={() => setOpen(false)} severity=\"error\">\r\n                                Presiona el boton iniciar sesi√≥n para ingresar o prueba ingresando datos al azar\r\n                                                                </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={openE}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={() => setOpenE(false)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"centerE\"}\r\n                        >\r\n\r\n                            <Alert onClose={() => setOpenE(false)} severity=\"error\">\r\n                                ¬°Error! Datos incorrectos\r\n                                                                </Alert>\r\n                        </Snackbar>\r\n                    </>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <SideBar item={item} />\r\n                );\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport { Home } from '@material-ui/icons';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport '../prueba.css';\r\nimport Pages from './Pages';\r\nimport Login from \"./Login/Login\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst SideBar = ({ item }) => {\r\n    const [seleccion, setSeleccion] = useState('home');\r\n    const [random, setRandom] = useState({});\r\n    const sideRef = useRef();\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n\r\n    //Side Bar\r\n    useEffect(() => {\r\n        const cantP = Math.round(Math.random() * (5000) + 100);\r\n        const inv = Math.round(162005 * cantP);\r\n        const cliente = Math.round(Math.random() * (90) + 15);\r\n        const proveedores = Math.round(Math.random() * (40) + 10);\r\n        const cantBoleta = Math.round(Math.random() * (350) + 50);\r\n        const totalVenta = Math.round(Math.random() * (1500000) + 500000);\r\n        const cantFact = Math.round(Math.random() * (200) + 50);\r\n        const totalCompra = Math.round(Math.random() * (800000) + 200000);\r\n        const clienteN = Math.round(Math.random() * (10) + 0);\r\n        const cantT = Math.round(Math.random() * (20) + 5);\r\n        const todo = {\r\n            cantP: cantP,\r\n            inv: inv,\r\n            cantClient: cliente,\r\n            cantProv: proveedores,\r\n            cantB: cantBoleta,\r\n            cantV: totalVenta,\r\n            cantF: cantFact,\r\n            cantC: totalCompra,\r\n            clN: clienteN,\r\n            cantT: cantT\r\n        }\r\n        setRandom(todo);\r\n    }, []);\r\n\r\n\r\n    //NavBar Metodos\r\n    const [valor, setValor] = useState(0);\r\n    const [count, setCount] = useState(4);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [text, setText] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const text0 = useRef();\r\n    const text1 = useRef();\r\n    const text2 = useRef();\r\n    const text3 = useRef();\r\n\r\n\r\n    const msj = [\r\n        {\r\n            id: 0,\r\n            titulo: \"Jhon Doe ha respondido tu mensaje\",\r\n            tit: \"Propuesta\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 1,\r\n            titulo: \"Janet Brown te ha enviado en mensaje\",\r\n            tit: \"Reporte de ventas\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 2,\r\n            titulo: \"Carla Mike te ha asignado la tarea 7\",\r\n            tit: \"subdividir y asignar al personal la realizacion de la tarea 7\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 3,\r\n            titulo: \"Michael Andrew report√≥ un error en la tarea 10\",\r\n            tit: \"Error en la ejecuci√≥n de la tarea 10\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n    ];\r\n\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'          \r\n        },\r\n    }));\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const openModal = (id) => {\r\n        setText(msj[id]);\r\n        setModalIsOpen(true);\r\n\r\n    }\r\n\r\n    const cerrarSesion = () => {\r\n        setValor(1);\r\n        const sideNode = sideRef.current;\r\n        sideNode.style.display = \"none\";\r\n    }\r\n\r\n    const eliminar = (id) => {\r\n        setModalIsOpen(false);\r\n        switch (id) {\r\n            case 0:\r\n                const texto0Node = text0.current;\r\n                texto0Node.style.display = \"none\";\r\n                break;\r\n            case 1:\r\n                const texto1Node = text1.current;\r\n                texto1Node.style.display = \"none\";\r\n                break;\r\n            case 2:\r\n                const texto2Node = text2.current;\r\n                texto2Node.style.display = \"none\";\r\n                break;\r\n            case 3:\r\n                const texto3Node = text3.current;\r\n                texto3Node.style.display = \"none\";\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    switch (valor) {\r\n        case 0:\r\n\r\n            return (\r\n                <div id=\"sideNav\" ref={sideRef}>\r\n                    <div >\r\n                        <SideNav className=\"text-light\"\r\n                            onSelect={(selected) => {\r\n                                setSeleccion(selected);\r\n                            }}\r\n                        >\r\n                            <SideNav.Toggle className=\"text-light\" style={{ color: 'black' }} />\r\n                            <SideNav.Nav defaultSelected=\"home\" className=\"text-light\">\r\n                                <NavItem eventKey=\"home\">\r\n                                    <NavIcon>\r\n                                        <Home className=\"icon\" />\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Panel de control\r\n                            </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"transacciones\">\r\n                                    <NavIcon>\r\n                                        <MonetizationOnIcon className=\"icon\" />\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Transacciones\r\n                            </NavText>\r\n                                    <NavItem eventKey=\"transacciones/ventas\">\r\n                                        <NavText>\r\n                                            Ventas\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"transacciones/compra\">\r\n                                        <NavText>\r\n                                            Compras\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"contactos\">\r\n                                    <NavIcon>\r\n                                        <ContactsIcon />\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Contactos\r\n                            </NavText>\r\n                                    <NavItem eventKey=\"contactos/prov\">\r\n                                        <NavText>\r\n                                            Proveedor\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"contactos/cliente\">\r\n                                        <NavText>\r\n                                            Cliente\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"contactos/trab\">\r\n                                        <NavText>\r\n                                            Trabajadores\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"productos\">\r\n                                    <NavIcon>\r\n                                        <StorageIcon className=\"icon\" />\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Productos\r\n                            </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"reportes\">\r\n                                    <NavIcon>\r\n                                        <TrendingUpIcon className=\"icon\" />\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Reportes\r\n                            </NavText>\r\n                                    <NavItem eventKey=\"reportes/venta\">\r\n                                        <NavText>\r\n                                            Resumen de ventas por periodo\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"reportes/cliente\">\r\n                                        <NavText>\r\n                                            Reporte de ventas por cliente\r\n                                        </NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"reportes/productos\">\r\n                                        <NavText>\r\n                                            Reporte de ventas por productos\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"reportes/compra\">\r\n                                        <NavText>\r\n                                            Reporte de Compras\r\n                                </NavText>\r\n                                    </NavItem>\r\n                                </NavItem>\r\n                            </SideNav.Nav>\r\n                        </SideNav>\r\n                        <>\r\n                            <nav className=\"navbar navbar-expand-md barra \">\r\n                                <p className=\"navbar-brand dashTittle\"></p>\r\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                                    <MoreVertIcon style={{ color: 'rgb(255,255,255)', height: \"35px\", width: \"35px\" }} />\r\n                                </button>\r\n\r\n                                <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n                                    <ul className=\"navbar-nav \">\r\n                                        <li className=\"nav-item dropdown dropleft\" >\r\n                                            <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\" style={{ height: \"54px\", width: \"66px\" }} onClick={() => setCount(0)} >\r\n                                                <Badge badgeContent={count} color=\"secondary\"\r\n                                                    anchorOrigin={{\r\n                                                        vertical: 'top',\r\n                                                        horizontal: 'left',\r\n                                                    }}\r\n\r\n                                                >\r\n                                                    <NotificationsIcon style={{ color: 'rgb(255,255,255)', height: \"35px\", width: \"35px\" }} />\r\n                                                </Badge>\r\n                                            </button>\r\n                                            <div className=\"dropdown-menu\">\r\n                                                <h6 className=\"dropdown-header\">Mensajes</h6>\r\n                                                <p className=\"dropdown-item\" id=\"0\" ref={text0} onClick={() => openModal(0)}>{msj[0].titulo}</p>\r\n                                                <p className=\"dropdown-item\" id=\"1\" ref={text1} onClick={() => openModal(1)}>{msj[1].titulo}</p>\r\n                                                <div className=\"dropdown-divider\"></div>\r\n                                                <h6 className=\"dropdown-header\" >Asignaciones</h6>\r\n                                                <p className=\"dropdown-item\" id=\"2\" ref={text2} onClick={() => openModal(2)}>{msj[2].titulo}</p>\r\n                                                <p className=\"dropdown-item\" id=\"3\" ref={text3} onClick={() => openModal(3)}>{msj[3].titulo}</p>\r\n                                            </div>\r\n                                        </li>\r\n                                        {matches ? \r\n                                        <li className=\"nav-item dropdown dropleft\">\r\n                                            <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\">\r\n                                                <Avatar alt=\"Avatar\" src={item.picture.medium} />\r\n                                            </button>\r\n                                            <div className=\"dropdown-menu\">\r\n                                                <h6 className=\"dropdown-header\">Datos</h6>\r\n                                                <p className=\"dropdown-item-text\">{item.name.first} {item.name.last} - Administrador</p>\r\n                                                <div className=\"dropdown-divider\"></div>\r\n                                                <h6 className=\"dropdown-header\">Acciones</h6>\r\n                                                <a className=\"dropdown-item\" onClick={()=>setSeleccion(\"config/perfil\")}>Perfil</a>\r\n                                                <a className=\"dropdown-item\" onClick={() => cerrarSesion()}>Cerrar Sesi√≥n</a>\r\n                                            </div>\r\n                                        </li>\r\n                                        :\r\n                                        <li className=\"nav-item dropdown dropright\">\r\n                                            <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\">\r\n                                                <Avatar alt=\"Avatar\" src={item.picture.medium} />\r\n                                            </button>\r\n                                            <div className=\"dropdown-menu\" style={{textAlign:\"right\"}}>\r\n                                                <h6 className=\"dropdown-header\">Datos</h6>\r\n                                                <p className=\"dropdown-item-text\">{item.name.first} {item.name.last} - Administrador</p>\r\n                                                <div className=\"dropdown-divider\"></div>\r\n                                                <h6 className=\"dropdown-header\">Acciones</h6>\r\n                                                <a className=\"dropdown-item\" onClick={()=>setSeleccion(\"config/perfil\")}>Perfil</a>\r\n                                                <a className=\"dropdown-item\" onClick={() => cerrarSesion()}>Cerrar Sesi√≥n</a>\r\n                                            </div>\r\n                                        </li>\r\n                                        }\r\n\r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n\r\n                            <Snackbar open={open}\r\n                                autoHideDuration={6000}\r\n                                TransitionComponent={TransitionLeft}\r\n                                onClose={(e) => handleClose(e)}\r\n                                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                                key={\"top\" + \"center\"}\r\n                            >\r\n\r\n                                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                                    no disponible en la version de prueba\r\n                                                    </Alert>\r\n                            </Snackbar>\r\n\r\n\r\n                            <Modal\r\n                                isOpen={modalIsOpen}\r\n                                shouldCloseOnEsc={true}\r\n                                shouldCloseOnOverlayClick={true}\r\n                                aria-labelledby=\"simple-modal-title\"\r\n                                aria-describedby=\"simple-modal-description\"\r\n                                className={classes.modal}\r\n                            >\r\n                                <div className={classes.paper}>\r\n                                    <header>\r\n                                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                                        <h4 className=\"h1T pt-3 ml-5 titleNavbar\" >Mensaje</h4>\r\n                                    </header>\r\n                                    <main>\r\n                                        <div className=\"row texto ml-5\">\r\n                                            <div className=\"col-md-12 mt-3 \">\r\n                                                <h5 className=\"textNavbar\" >Titulo: </h5>\r\n                                                <p className=\"textNavbar\">{text.tit}</p>\r\n                                            </div>\r\n                                            <div className=\"col-md-12 mt-3\">\r\n                                                <h5 className=\"textNavbar\">Mensaje: </h5>\r\n                                                <p className=\"textNavbar\">{text.texto}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={classes.paper} className=\"row\">\r\n                                        \r\n                                            <div className=\"col-xl-12 mt-3\"  style={{ float: \"right\"}}>\r\n                                                <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\" }} onClick={() => eliminar(text.id)}>Eliminar</button>\r\n                                            \r\n                                                <button className=\"btn btn-success ml-5 mt-3 mb-5\" style={{ float: \"right\", marginRight: \"10%\" }} onClick={() => handleClick()}>responder</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </main>\r\n                                </div>\r\n                            </Modal>\r\n                        </>\r\n                    </div>\r\n                    <main>\r\n                        <Pages seleccion={seleccion} random={random} item={item} />\r\n                    </main>\r\n                </div>\r\n\r\n\r\n            );\r\n\r\n        case 1:\r\n            return (\r\n                <Login />\r\n            );\r\n    }\r\n}\r\nexport default SideBar;","import React, { useState, useEffect } from 'react';\r\nimport Login from \"./Login/Login\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport prod from './product.png'\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Navbar = ({ item }) => {\r\n\r\n    const [valor, setValor] = useState(0);\r\n    const [count, setCount] = useState(4);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [text, setText] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    \r\n\r\n    const msj = [\r\n        {\r\n            id: 0,\r\n            titulo: \"Jhon Doe ha respondido tu mensaje\",\r\n            tit: \"Propuesta\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 1,\r\n            titulo: \"Janet Brown te ha enviado en mensaje\",\r\n            tit: \"Reporte de ventas\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 2,\r\n            titulo: \"Carla Mike te ha asignado la tarea 7\",\r\n            tit: \"subdividir y asignar al personal la realizacion de la tarea 7\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 3,\r\n            titulo: \"Michael Andrew report√≥ un error en la tarea 10\",\r\n            tit: \"Error en la ejecuci√≥n de la tarea 10\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n    ];\r\n   \r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'980px',\r\n            overflow: 'scroll'            \r\n        },\r\n    }));\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const openModal = (id) => {\r\n        setText(msj[id]);\r\n        setModalIsOpen(true);\r\n\r\n    }\r\n\r\n    const cerrarSesion = () => {\r\n        setValor(1);\r\n        document.getElementById(\"sideNav\").style.display = \"none\";\r\n        return (<Login />)\r\n        \r\n    }\r\n\r\n    const eliminar = (id) => {\r\n        setModalIsOpen(false);\r\n        document.getElementById(id).style.display = \"none\";\r\n    }\r\n\r\n\r\n    switch (valor) {\r\n        case 0:\r\n            return (\r\n                <>\r\n                    <nav className=\"navbar navbar-expand-md barra \">\r\n                        <p className=\"navbar-brand dashTittle\"></p>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                            <MoreVertIcon style={{ color: 'rgb(255,255,255)', height: \"35px\", width: \"35px\" }} />\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n                            <ul className=\"navbar-nav \">\r\n                                <li className=\"nav-item dropdown dropleft\" >\r\n                                    <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\" style={{ height: \"54px\", width: \"66px\" }} onClick={() => setCount(0)} >\r\n                                        <Badge badgeContent={count} color=\"secondary\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'left',\r\n                                            }}\r\n\r\n                                        >\r\n                                            <NotificationsIcon style={{ color: 'rgb(255,255,255)', height: \"35px\", width: \"35px\" }} />\r\n                                        </Badge>\r\n                                    </button>\r\n                                    <div className=\"dropdown-menu\">\r\n                                        <h6 className=\"dropdown-header\">Mensajes</h6>\r\n                                        <p className=\"dropdown-item\" id=\"0\" onClick={() => openModal(0)}>{msj[0].titulo}</p>\r\n                                        <p className=\"dropdown-item\" id=\"1\" onClick={() => openModal(1)}>{msj[1].titulo}</p>\r\n                                        <div className=\"dropdown-divider\"></div>\r\n                                        <h6 className=\"dropdown-header\" >Asignaciones</h6>\r\n                                        <p className=\"dropdown-item\" id=\"2\" onClick={() => openModal(2)}>{msj[2].titulo}</p>\r\n                                        <p className=\"dropdown-item\" id=\"3\" onClick={() => openModal(3)}>{msj[3].titulo}</p>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown dropleft\">\r\n                                    <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\">\r\n                                        <Avatar alt=\"Avatar\" src={item.picture.medium} />\r\n                                    </button>\r\n                                    <div className=\"dropdown-menu\">\r\n                                        <h6 className=\"dropdown-header\">Datos</h6>\r\n                                        <p className=\"dropdown-item-text\">{item.name.first} {item.name.last} - Administrador</p>\r\n                                        <div className=\"dropdown-divider\"></div>\r\n                                        <h6 className=\"dropdown-header\">Acciones</h6>\r\n                                        <a className=\"dropdown-item\">Perfil</a>\r\n                                        <a className=\"dropdown-item\">Configuraci√≥n</a>\r\n                                        <a className=\"dropdown-item\" onClick={() => cerrarSesion()}>Cerrar Sesi√≥n</a>\r\n                                    </div>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    <Snackbar open={open}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleClose(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                            no disponible en la version de prueba\r\n                                                    </Alert>\r\n                    </Snackbar>\r\n\r\n\r\n                    <Modal\r\n                        isOpen={modalIsOpen}\r\n                        shouldCloseOnEsc={true}\r\n                        shouldCloseOnOverlayClick={true}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        className={classes.modal}\r\n                    >\r\n                        <div className={classes.paper}>\r\n                            <header>\r\n                                <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                                <h4 className=\"h1T pt-3 ml-5 titleNavbar\" >Mensaje</h4>\r\n                            </header>\r\n                            <main>\r\n                                <div className=\"row texto ml-5\">\r\n                                    <div className=\"col-md-12 mt-3 \">\r\n                                        <h5 className=\"textNavbar\" >Titulo: </h5>\r\n                                        <p className=\"textNavbar\">{text.tit}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <h5 className=\"textNavbar\">Mensaje: </h5>\r\n                                        <p className=\"textNavbar\">{text.texto}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.paper} className=\"row\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{float:\"left\", marginLeft:\"10%\"}} onClick={() => eliminar(text.id)}>Eliminar</button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-success ml-5 mt-3 mb-5\" style={{float:\"right\", marginRight:\"10%\"}} onClick={() => handleClick()}>responder</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n                    </Modal>\r\n                </>\r\n\r\n            );\r\n\r\n        case 1:\r\n            return (\r\n                <Login />\r\n            );\r\n    }\r\n}\r\nexport default Navbar;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport poppers from \"popper.js\";\nimport $ from 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport './App.css';\nimport SideBar from \"./Componentes/SideBar\";\nimport Navbar from './Componentes/Navbar';\nimport Login from './Componentes/Login/Login';\n\nfunction App() {\n  return (\n    <Login />\n  );\n}\n\nexport default App;\n//<Login />","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}